
lab 11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ba  00800100  00000cb4  00000d48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cb4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  008001ba  008001ba  00000e02  2**0
                  ALLOC
  3 .stab         00000d20  00000000  00000000  00000e04  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e25  00000000  00000000  00001b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000007d  00000000  00000000  00002949  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000029c8  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000070  00000000  00000000  00002a08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00000596  00000000  00000000  00002a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000027c  00000000  00000000  0000300e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000001eb  00000000  00000000  0000328a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000158  00000000  00000000  00003478  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000246  00000000  00000000  000035d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000054e  00000000  00000000  00003816  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000060  00000000  00000000  00003d64  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e4 eb       	ldi	r30, 0xB4	; 180
  90:	fc e0       	ldi	r31, 0x0C	; 12
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	aa 3b       	cpi	r26, 0xBA	; 186
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	aa eb       	ldi	r26, 0xBA	; 186
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a1 3c       	cpi	r26, 0xC1	; 193
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 7e 01 	call	0x2fc	; 0x2fc <main>
  b2:	0c 94 58 06 	jmp	0xcb0	; 0xcb0 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <getkey>:

/************************************************************************/
//		main() goes here
/************************************************************************/
//getkey() goes here.
signed char getkey(){
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
	int i;
	int k;
	int mask = 0x10;
  be:	e0 e1       	ldi	r30, 0x10	; 16
  c0:	f0 e0       	ldi	r31, 0x00	; 0
	int mask2 = 0x01;
	
	for (i = 0; i < 4; i++) {
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
		PORTA = mask;
		mask <<= 1;
		
		int mask2 = 0x01;
		for (k = 0; k < 4; k++) {
			if (PINA & mask2) {
  c6:	d1 e0       	ldi	r29, 0x01	; 1
  c8:	c0 e0       	ldi	r28, 0x00	; 0
  ca:	b2 e0       	ldi	r27, 0x02	; 2
  cc:	a0 e0       	ldi	r26, 0x00	; 0
	int k;
	int mask = 0x10;
	int mask2 = 0x01;
	
	for (i = 0; i < 4; i++) {
		DDRA = mask;
  ce:	e1 b9       	out	0x01, r30	; 1
		PORTA = mask;
  d0:	e2 b9       	out	0x02, r30	; 2
		mask <<= 1;
  d2:	ee 0f       	add	r30, r30
  d4:	ff 1f       	adc	r31, r31
		
		int mask2 = 0x01;
		for (k = 0; k < 4; k++) {
			if (PINA & mask2) {
  d6:	00 99       	sbic	0x00, 0	; 0
  d8:	0b c0       	rjmp	.+22     	; 0xf0 <getkey+0x36>
  da:	4d 2f       	mov	r20, r29
  dc:	5c 2f       	mov	r21, r28
  de:	6b 2f       	mov	r22, r27
  e0:	7a 2f       	mov	r23, r26
  e2:	20 b1       	in	r18, 0x00	; 0
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	26 23       	and	r18, r22
  e8:	37 23       	and	r19, r23
  ea:	23 2b       	or	r18, r19
  ec:	39 f0       	breq	.+14     	; 0xfc <getkey+0x42>
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <getkey+0x3a>
		DDRA = mask;
		PORTA = mask;
		mask <<= 1;
		
		int mask2 = 0x01;
		for (k = 0; k < 4; k++) {
  f0:	40 e0       	ldi	r20, 0x00	; 0
  f2:	50 e0       	ldi	r21, 0x00	; 0
			if (PINA & mask2) {
				return (4 * i + k);
  f4:	88 0f       	add	r24, r24
  f6:	88 0f       	add	r24, r24
  f8:	84 0f       	add	r24, r20
  fa:	0c c0       	rjmp	.+24     	; 0x114 <getkey+0x5a>
			}
			mask2 <<= 1;
  fc:	66 0f       	add	r22, r22
  fe:	77 1f       	adc	r23, r23
		DDRA = mask;
		PORTA = mask;
		mask <<= 1;
		
		int mask2 = 0x01;
		for (k = 0; k < 4; k++) {
 100:	4f 5f       	subi	r20, 0xFF	; 255
 102:	5f 4f       	sbci	r21, 0xFF	; 255
 104:	44 30       	cpi	r20, 0x04	; 4
 106:	51 05       	cpc	r21, r1
 108:	61 f7       	brne	.-40     	; 0xe2 <getkey+0x28>
	int i;
	int k;
	int mask = 0x10;
	int mask2 = 0x01;
	
	for (i = 0; i < 4; i++) {
 10a:	01 96       	adiw	r24, 0x01	; 1
 10c:	84 30       	cpi	r24, 0x04	; 4
 10e:	91 05       	cpc	r25, r1
 110:	f1 f6       	brne	.-68     	; 0xce <getkey+0x14>
				return (4 * i + k);
			}
			mask2 <<= 1;
		}
	}
	return (-1);
 112:	8f ef       	ldi	r24, 0xFF	; 255
	
}
 114:	df 91       	pop	r29
 116:	cf 91       	pop	r28
 118:	08 95       	ret

0000011a <mapkey>:
signed char mapkey (signed char key) {
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	cd b7       	in	r28, 0x3d	; 61
 120:	de b7       	in	r29, 0x3e	; 62
 122:	60 97       	sbiw	r28, 0x10	; 16
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	f8 94       	cli
 128:	de bf       	out	0x3e, r29	; 62
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	cd bf       	out	0x3d, r28	; 61
	if (key > 15 || key < 0) {
 12e:	80 31       	cpi	r24, 0x10	; 16
 130:	98 f4       	brcc	.+38     	; 0x158 <mapkey+0x3e>
		return (-1);
	}
	else {
		unsigned char map[] = {1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 9, 12, '*', 0, '#', 13};
 132:	90 e1       	ldi	r25, 0x10	; 16
 134:	ee e0       	ldi	r30, 0x0E	; 14
 136:	f1 e0       	ldi	r31, 0x01	; 1
 138:	de 01       	movw	r26, r28
 13a:	11 96       	adiw	r26, 0x01	; 1
 13c:	01 90       	ld	r0, Z+
 13e:	0d 92       	st	X+, r0
 140:	9a 95       	dec	r25
 142:	e1 f7       	brne	.-8      	; 0x13c <mapkey+0x22>
		return map[key];
 144:	e1 e0       	ldi	r30, 0x01	; 1
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	ec 0f       	add	r30, r28
 14a:	fd 1f       	adc	r31, r29
 14c:	e8 0f       	add	r30, r24
 14e:	f1 1d       	adc	r31, r1
 150:	87 fd       	sbrc	r24, 7
 152:	fa 95       	dec	r31
 154:	80 81       	ld	r24, Z
 156:	01 c0       	rjmp	.+2      	; 0x15a <mapkey+0x40>
	return (-1);
	
}
signed char mapkey (signed char key) {
	if (key > 15 || key < 0) {
		return (-1);
 158:	8f ef       	ldi	r24, 0xFF	; 255
	}
	else {
		unsigned char map[] = {1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 9, 12, '*', 0, '#', 13};
		return map[key];
	}
}
 15a:	60 96       	adiw	r28, 0x10	; 16
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	f8 94       	cli
 160:	de bf       	out	0x3e, r29	; 62
 162:	0f be       	out	0x3f, r0	; 63
 164:	cd bf       	out	0x3d, r28	; 61
 166:	df 91       	pop	r29
 168:	cf 91       	pop	r28
 16a:	08 95       	ret

0000016c <getnum>:
signed int getnum(void) {
 16c:	0f 93       	push	r16
 16e:	1f 93       	push	r17
 170:	cf 93       	push	r28
 172:	df 93       	push	r29
	int result = 0;
 174:	c0 e0       	ldi	r28, 0x00	; 0
 176:	d0 e0       	ldi	r29, 0x00	; 0
		
		if (key >= 0 && key <= 9) {
			result = result * 10 + key;
		}
		else if (key == '*') {
			result /= 10;
 178:	0a e0       	ldi	r16, 0x0A	; 10
 17a:	10 e0       	ldi	r17, 0x00	; 0
}
signed int getnum(void) {
	int result = 0;
	char key;
	while (1) {
		while (getkey() != -1) {}
 17c:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 180:	8f 3f       	cpi	r24, 0xFF	; 255
 182:	e1 f7       	brne	.-8      	; 0x17c <getnum+0x10>
		while ((key = mapkey(getkey())) == -1) {}
 184:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 188:	0e 94 8d 00 	call	0x11a	; 0x11a <mapkey>
		
		if (key >= 0 && key <= 9) {
 18c:	8a 30       	cpi	r24, 0x0A	; 10
 18e:	70 f4       	brcc	.+28     	; 0x1ac <getnum+0x40>
			result = result * 10 + key;
 190:	9e 01       	movw	r18, r28
 192:	22 0f       	add	r18, r18
 194:	33 1f       	adc	r19, r19
 196:	cc 0f       	add	r28, r28
 198:	dd 1f       	adc	r29, r29
 19a:	cc 0f       	add	r28, r28
 19c:	dd 1f       	adc	r29, r29
 19e:	cc 0f       	add	r28, r28
 1a0:	dd 1f       	adc	r29, r29
 1a2:	c2 0f       	add	r28, r18
 1a4:	d3 1f       	adc	r29, r19
 1a6:	c8 0f       	add	r28, r24
 1a8:	d1 1d       	adc	r29, r1
 1aa:	e8 cf       	rjmp	.-48     	; 0x17c <getnum+0x10>
		}
		else if (key == '*') {
 1ac:	8a 32       	cpi	r24, 0x2A	; 42
 1ae:	31 f4       	brne	.+12     	; 0x1bc <getnum+0x50>
			result /= 10;
 1b0:	ce 01       	movw	r24, r28
 1b2:	b8 01       	movw	r22, r16
 1b4:	0e 94 24 03 	call	0x648	; 0x648 <__divmodhi4>
 1b8:	eb 01       	movw	r28, r22
 1ba:	e0 cf       	rjmp	.-64     	; 0x17c <getnum+0x10>
		}
		else if (key == '#') {
 1bc:	83 32       	cpi	r24, 0x23	; 35
 1be:	f1 f6       	brne	.-68     	; 0x17c <getnum+0x10>
			return result;
		}
	}
}
 1c0:	ce 01       	movw	r24, r28
 1c2:	df 91       	pop	r29
 1c4:	cf 91       	pop	r28
 1c6:	1f 91       	pop	r17
 1c8:	0f 91       	pop	r16
 1ca:	08 95       	ret

000001cc <delaycycles>:
		mydelayms(10);

	}
}
	void delaycycles(unsigned int cycles){
		TCNT1 = ~(cycles - 28);
 1cc:	4c 97       	sbiw	r24, 0x1c	; 28
 1ce:	80 95       	com	r24
 1d0:	90 95       	com	r25
 1d2:	90 93 85 00 	sts	0x0085, r25
 1d6:	80 93 84 00 	sts	0x0084, r24
		TIFR1 = 0x01<< TOV1;
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	86 bb       	out	0x16, r24	; 22
		while(!(TIFR1&(0x01<<TOV1)));
 1de:	b0 9b       	sbis	0x16, 0	; 22
 1e0:	fe cf       	rjmp	.-4      	; 0x1de <delaycycles+0x12>
		return;
}
 1e2:	08 95       	ret

000001e4 <mydelayms>:
		playnote(s->thenotes[i]);
	}
	return;
}
	
	void mydelayms(unsigned int ms){
 1e4:	0f 93       	push	r16
 1e6:	1f 93       	push	r17
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	00 d0       	rcall	.+0      	; 0x1ee <mydelayms+0xa>
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	8c 01       	movw	r16, r24
		volatile int i;
		for(i=0;i<ms;i++){
 1f4:	1a 82       	std	Y+2, r1	; 0x02
 1f6:	19 82       	std	Y+1, r1	; 0x01
 1f8:	89 81       	ldd	r24, Y+1	; 0x01
 1fa:	9a 81       	ldd	r25, Y+2	; 0x02
 1fc:	80 17       	cp	r24, r16
 1fe:	91 07       	cpc	r25, r17
 200:	78 f4       	brcc	.+30     	; 0x220 <mydelayms+0x3c>
			delaycycles(1000);
 202:	88 ee       	ldi	r24, 0xE8	; 232
 204:	93 e0       	ldi	r25, 0x03	; 3
 206:	0e 94 e6 00 	call	0x1cc	; 0x1cc <delaycycles>
	return;
}
	
	void mydelayms(unsigned int ms){
		volatile int i;
		for(i=0;i<ms;i++){
 20a:	29 81       	ldd	r18, Y+1	; 0x01
 20c:	3a 81       	ldd	r19, Y+2	; 0x02
 20e:	2f 5f       	subi	r18, 0xFF	; 255
 210:	3f 4f       	sbci	r19, 0xFF	; 255
 212:	3a 83       	std	Y+2, r19	; 0x02
 214:	29 83       	std	Y+1, r18	; 0x01
 216:	29 81       	ldd	r18, Y+1	; 0x01
 218:	3a 81       	ldd	r19, Y+2	; 0x02
 21a:	20 17       	cp	r18, r16
 21c:	31 07       	cpc	r19, r17
 21e:	88 f3       	brcs	.-30     	; 0x202 <mydelayms+0x1e>
			delaycycles(1000);
		}
		
	}
 220:	0f 90       	pop	r0
 222:	0f 90       	pop	r0
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	1f 91       	pop	r17
 22a:	0f 91       	pop	r16
 22c:	08 95       	ret

0000022e <playnote>:
}

void serialWrite(unsigned char sendByte) {
//	Your code here
}
void playnote(struct note n){
 22e:	df 92       	push	r13
 230:	ef 92       	push	r14
 232:	ff 92       	push	r15
 234:	0f 93       	push	r16
 236:	1f 93       	push	r17
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
	unsigned int toggle =0;
	unsigned int cycles =0;
	int i;
	toggle = frequency[n.notenum] * n.duration/8;
 23c:	e8 2f       	mov	r30, r24
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	ee 0f       	add	r30, r30
 242:	ff 1f       	adc	r31, r31
 244:	ee 5d       	subi	r30, 0xDE	; 222
 246:	fe 4f       	sbci	r31, 0xFE	; 254
 248:	20 81       	ld	r18, Z
 24a:	31 81       	ldd	r19, Z+1	; 0x01
 24c:	92 9f       	mul	r25, r18
 24e:	70 01       	movw	r14, r0
 250:	93 9f       	mul	r25, r19
 252:	f0 0c       	add	r15, r0
 254:	11 24       	eor	r1, r1
 256:	f6 94       	lsr	r15
 258:	e7 94       	ror	r14
 25a:	f6 94       	lsr	r15
 25c:	e7 94       	ror	r14
 25e:	f6 94       	lsr	r15
 260:	e7 94       	ror	r14
	cycles = 500000 / frequency[n.notenum];
 262:	40 e0       	ldi	r20, 0x00	; 0
 264:	50 e0       	ldi	r21, 0x00	; 0
 266:	60 e2       	ldi	r22, 0x20	; 32
 268:	71 ea       	ldi	r23, 0xA1	; 161
 26a:	87 e0       	ldi	r24, 0x07	; 7
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	0e 94 38 03 	call	0x670	; 0x670 <__divmodsi4>
 272:	89 01       	movw	r16, r18
	for(i=0;i<toggle;i++){
 274:	e1 14       	cp	r14, r1
 276:	f1 04       	cpc	r15, r1
 278:	c9 f0       	breq	.+50     	; 0x2ac <playnote+0x7e>
 27a:	c0 e0       	ldi	r28, 0x00	; 0
 27c:	d0 e0       	ldi	r29, 0x00	; 0
		TOGGLESPEAKER;
 27e:	68 94       	set
 280:	dd 24       	eor	r13, r13
 282:	d1 f8       	bld	r13, 1
 284:	38 b1       	in	r19, 0x08	; 8
 286:	3d 25       	eor	r19, r13
 288:	38 b9       	out	0x08, r19	; 8
		delaycycles(cycles);
 28a:	c8 01       	movw	r24, r16
 28c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <delaycycles>
		TOGGLESPEAKER;
 290:	38 b1       	in	r19, 0x08	; 8
 292:	3d 25       	eor	r19, r13
 294:	38 b9       	out	0x08, r19	; 8
		delaycycles(cycles);
 296:	c8 01       	movw	r24, r16
 298:	0e 94 e6 00 	call	0x1cc	; 0x1cc <delaycycles>
		mydelayms(10);
 29c:	8a e0       	ldi	r24, 0x0A	; 10
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <mydelayms>
	unsigned int toggle =0;
	unsigned int cycles =0;
	int i;
	toggle = frequency[n.notenum] * n.duration/8;
	cycles = 500000 / frequency[n.notenum];
	for(i=0;i<toggle;i++){
 2a4:	21 96       	adiw	r28, 0x01	; 1
 2a6:	ce 15       	cp	r28, r14
 2a8:	df 05       	cpc	r29, r15
 2aa:	61 f7       	brne	.-40     	; 0x284 <playnote+0x56>
		TOGGLESPEAKER;
		delaycycles(cycles);
		mydelayms(10);

	}
}
 2ac:	df 91       	pop	r29
 2ae:	cf 91       	pop	r28
 2b0:	1f 91       	pop	r17
 2b2:	0f 91       	pop	r16
 2b4:	ff 90       	pop	r15
 2b6:	ef 90       	pop	r14
 2b8:	df 90       	pop	r13
 2ba:	08 95       	ret

000002bc <playsong>:
		TCNT1 = ~(cycles - 28);
		TIFR1 = 0x01<< TOV1;
		while(!(TIFR1&(0x01<<TOV1)));
		return;
}
void playsong(const struct song* s){
 2bc:	0f 93       	push	r16
 2be:	1f 93       	push	r17
 2c0:	cf 93       	push	r28
 2c2:	df 93       	push	r29
	int i;
	for(i=0;i<s->numnotes; i++){
 2c4:	fc 01       	movw	r30, r24
 2c6:	20 81       	ld	r18, Z
 2c8:	22 23       	and	r18, r18
 2ca:	99 f0       	breq	.+38     	; 0x2f2 <playsong+0x36>
 2cc:	8c 01       	movw	r16, r24
 2ce:	c0 e0       	ldi	r28, 0x00	; 0
 2d0:	d0 e0       	ldi	r29, 0x00	; 0
		playnote(s->thenotes[i]);
 2d2:	fe 01       	movw	r30, r28
 2d4:	ee 0f       	add	r30, r30
 2d6:	ff 1f       	adc	r31, r31
 2d8:	e0 0f       	add	r30, r16
 2da:	f1 1f       	adc	r31, r17
 2dc:	81 81       	ldd	r24, Z+1	; 0x01
 2de:	92 81       	ldd	r25, Z+2	; 0x02
 2e0:	0e 94 17 01 	call	0x22e	; 0x22e <playnote>
		while(!(TIFR1&(0x01<<TOV1)));
		return;
}
void playsong(const struct song* s){
	int i;
	for(i=0;i<s->numnotes; i++){
 2e4:	21 96       	adiw	r28, 0x01	; 1
 2e6:	f8 01       	movw	r30, r16
 2e8:	20 81       	ld	r18, Z
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	c2 17       	cp	r28, r18
 2ee:	d3 07       	cpc	r29, r19
 2f0:	84 f3       	brlt	.-32     	; 0x2d2 <playsong+0x16>
		playnote(s->thenotes[i]);
	}
	return;
}
 2f2:	df 91       	pop	r29
 2f4:	cf 91       	pop	r28
 2f6:	1f 91       	pop	r17
 2f8:	0f 91       	pop	r16
 2fa:	08 95       	ret

000002fc <main>:



void main(){
	char x=0;
		DDRA = 0xF0;
 2fc:	80 ef       	ldi	r24, 0xF0	; 240
 2fe:	81 b9       	out	0x01, r24	; 1
		DDRC = 0xF0;
 300:	87 b9       	out	0x07, r24	; 7
TCCR1B  = 0x01;
 302:	c1 e0       	ldi	r28, 0x01	; 1
 304:	c0 93 81 00 	sts	0x0081, r28
lcd_init();		// Init the LCD display
 308:	0e 94 34 02 	call	0x468	; 0x468 <lcd_init>
stdout=&lcd_stdout;
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	91 e0       	ldi	r25, 0x01	; 1
 310:	90 93 be 01 	sts	0x01BE, r25
 314:	80 93 bd 01 	sts	0x01BD, r24
PORTC = 0x01;
 318:	c8 b9       	out	0x08, r28	; 8

        while(1){
			x = getnum();
			printf("%d\n",x);
 31a:	0e e1       	ldi	r16, 0x1E	; 30
 31c:	11 e0       	ldi	r17, 0x01	; 1
lcd_init();		// Init the LCD display
stdout=&lcd_stdout;
PORTC = 0x01;

        while(1){
			x = getnum();
 31e:	0e 94 b6 00 	call	0x16c	; 0x16c <getnum>
 322:	c8 2f       	mov	r28, r24
			printf("%d\n",x);
 324:	99 27       	eor	r25, r25
 326:	9f 93       	push	r25
 328:	8f 93       	push	r24
 32a:	1f 93       	push	r17
 32c:	0f 93       	push	r16
 32e:	0e 94 8d 03 	call	0x71a	; 0x71a <printf>

            if(x==5){
 332:	0f 90       	pop	r0
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	0f 90       	pop	r0
 33a:	c5 30       	cpi	r28, 0x05	; 5
 33c:	29 f4       	brne	.+10     	; 0x348 <main+0x4c>
				playsong(&marylamb);
 33e:	80 e4       	ldi	r24, 0x40	; 64
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	0e 94 5e 01 	call	0x2bc	; 0x2bc <playsong>
 346:	eb cf       	rjmp	.-42     	; 0x31e <main+0x22>

            }
			if(x==6){
 348:	c6 30       	cpi	r28, 0x06	; 6
 34a:	49 f7       	brne	.-46     	; 0x31e <main+0x22>
				playsong(&steinsong);
 34c:	8d e7       	ldi	r24, 0x7D	; 125
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	0e 94 5e 01 	call	0x2bc	; 0x2bc <playsong>
 354:	e4 cf       	rjmp	.-56     	; 0x31e <main+0x22>

00000356 <lcd_clk>:
 356:	47 9a       	sbi	0x08, 7	; 8
 358:	85 e0       	ldi	r24, 0x05	; 5
 35a:	8a 95       	dec	r24
 35c:	f1 f7       	brne	.-4      	; 0x35a <lcd_clk+0x4>
 35e:	00 00       	nop
 360:	47 98       	cbi	0x08, 7	; 8
 362:	85 e0       	ldi	r24, 0x05	; 5
 364:	8a 95       	dec	r24
 366:	f1 f7       	brne	.-4      	; 0x364 <lcd_clk+0xe>
 368:	00 00       	nop
 36a:	08 95       	ret

0000036c <lcd_busy_wait>:
 36c:	84 b1       	in	r24, 0x04	; 4
 36e:	80 7f       	andi	r24, 0xF0	; 240
 370:	84 b9       	out	0x04, r24	; 4
 372:	95 b1       	in	r25, 0x05	; 5
 374:	29 2f       	mov	r18, r25
 376:	20 71       	andi	r18, 0x10	; 16
 378:	2c 98       	cbi	0x05, 4	; 5
 37a:	46 9a       	sbi	0x08, 6	; 8
 37c:	47 9a       	sbi	0x08, 7	; 8
 37e:	85 e0       	ldi	r24, 0x05	; 5
 380:	8a 95       	dec	r24
 382:	f1 f7       	brne	.-4      	; 0x380 <lcd_busy_wait+0x14>
 384:	00 00       	nop
 386:	93 b1       	in	r25, 0x03	; 3
 388:	47 98       	cbi	0x08, 7	; 8
 38a:	85 e0       	ldi	r24, 0x05	; 5
 38c:	8a 95       	dec	r24
 38e:	f1 f7       	brne	.-4      	; 0x38c <lcd_busy_wait+0x20>
 390:	00 00       	nop
 392:	47 9a       	sbi	0x08, 7	; 8
 394:	85 e0       	ldi	r24, 0x05	; 5
 396:	8a 95       	dec	r24
 398:	f1 f7       	brne	.-4      	; 0x396 <lcd_busy_wait+0x2a>
 39a:	00 00       	nop
 39c:	83 b1       	in	r24, 0x03	; 3
 39e:	92 95       	swap	r25
 3a0:	90 7f       	andi	r25, 0xF0	; 240
 3a2:	8f 70       	andi	r24, 0x0F	; 15
 3a4:	89 2b       	or	r24, r25
 3a6:	47 98       	cbi	0x08, 7	; 8
 3a8:	95 e0       	ldi	r25, 0x05	; 5
 3aa:	9a 95       	dec	r25
 3ac:	f1 f7       	brne	.-4      	; 0x3aa <lcd_busy_wait+0x3e>
 3ae:	00 00       	nop
 3b0:	87 fd       	sbrc	r24, 7
 3b2:	e4 cf       	rjmp	.-56     	; 0x37c <lcd_busy_wait+0x10>
 3b4:	46 98       	cbi	0x08, 6	; 8
 3b6:	95 b1       	in	r25, 0x05	; 5
 3b8:	9f 7e       	andi	r25, 0xEF	; 239
 3ba:	92 2b       	or	r25, r18
 3bc:	95 b9       	out	0x05, r25	; 5
 3be:	94 b1       	in	r25, 0x04	; 4
 3c0:	9f 60       	ori	r25, 0x0F	; 15
 3c2:	94 b9       	out	0x04, r25	; 4
 3c4:	08 95       	ret

000003c6 <lcd_dread>:
 3c6:	0e 94 b6 01 	call	0x36c	; 0x36c <lcd_busy_wait>
 3ca:	84 b1       	in	r24, 0x04	; 4
 3cc:	80 7f       	andi	r24, 0xF0	; 240
 3ce:	84 b9       	out	0x04, r24	; 4
 3d0:	46 9a       	sbi	0x08, 6	; 8
 3d2:	47 9a       	sbi	0x08, 7	; 8
 3d4:	85 e0       	ldi	r24, 0x05	; 5
 3d6:	8a 95       	dec	r24
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <lcd_dread+0x10>
 3da:	00 00       	nop
 3dc:	23 b1       	in	r18, 0x03	; 3
 3de:	47 98       	cbi	0x08, 7	; 8
 3e0:	85 e0       	ldi	r24, 0x05	; 5
 3e2:	8a 95       	dec	r24
 3e4:	f1 f7       	brne	.-4      	; 0x3e2 <lcd_dread+0x1c>
 3e6:	00 00       	nop
 3e8:	47 9a       	sbi	0x08, 7	; 8
 3ea:	85 e0       	ldi	r24, 0x05	; 5
 3ec:	8a 95       	dec	r24
 3ee:	f1 f7       	brne	.-4      	; 0x3ec <lcd_dread+0x26>
 3f0:	00 00       	nop
 3f2:	93 b1       	in	r25, 0x03	; 3
 3f4:	22 95       	swap	r18
 3f6:	20 7f       	andi	r18, 0xF0	; 240
 3f8:	89 2f       	mov	r24, r25
 3fa:	8f 70       	andi	r24, 0x0F	; 15
 3fc:	47 98       	cbi	0x08, 7	; 8
 3fe:	46 98       	cbi	0x08, 6	; 8
 400:	94 b1       	in	r25, 0x04	; 4
 402:	9f 60       	ori	r25, 0x0F	; 15
 404:	94 b9       	out	0x04, r25	; 4
 406:	82 2b       	or	r24, r18
 408:	08 95       	ret

0000040a <lcd_dwrite>:
 40a:	cf 93       	push	r28
 40c:	c8 2f       	mov	r28, r24
 40e:	0e 94 b6 01 	call	0x36c	; 0x36c <lcd_busy_wait>
 412:	95 b1       	in	r25, 0x05	; 5
 414:	8c 2f       	mov	r24, r28
 416:	82 95       	swap	r24
 418:	8f 70       	andi	r24, 0x0F	; 15
 41a:	90 7f       	andi	r25, 0xF0	; 240
 41c:	98 2b       	or	r25, r24
 41e:	95 b9       	out	0x05, r25	; 5
 420:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_clk>
 424:	95 b1       	in	r25, 0x05	; 5
 426:	8c 2f       	mov	r24, r28
 428:	8f 70       	andi	r24, 0x0F	; 15
 42a:	90 7f       	andi	r25, 0xF0	; 240
 42c:	89 2b       	or	r24, r25
 42e:	85 b9       	out	0x05, r24	; 5
 430:	cf 91       	pop	r28
 432:	0c 94 ab 01 	jmp	0x356	; 0x356 <lcd_clk>

00000436 <lcd_iwrite>:
 436:	cf 93       	push	r28
 438:	c8 2f       	mov	r28, r24
 43a:	2c 98       	cbi	0x05, 4	; 5
 43c:	0e 94 b6 01 	call	0x36c	; 0x36c <lcd_busy_wait>
 440:	95 b1       	in	r25, 0x05	; 5
 442:	8c 2f       	mov	r24, r28
 444:	82 95       	swap	r24
 446:	8f 70       	andi	r24, 0x0F	; 15
 448:	90 7f       	andi	r25, 0xF0	; 240
 44a:	98 2b       	or	r25, r24
 44c:	95 b9       	out	0x05, r25	; 5
 44e:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_clk>
 452:	95 b1       	in	r25, 0x05	; 5
 454:	8c 2f       	mov	r24, r28
 456:	8f 70       	andi	r24, 0x0F	; 15
 458:	90 7f       	andi	r25, 0xF0	; 240
 45a:	89 2b       	or	r24, r25
 45c:	85 b9       	out	0x05, r24	; 5
 45e:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_clk>
 462:	2c 9a       	sbi	0x05, 4	; 5
 464:	cf 91       	pop	r28
 466:	08 95       	ret

00000468 <lcd_init>:
 468:	85 b1       	in	r24, 0x05	; 5
 46a:	80 7e       	andi	r24, 0xE0	; 224
 46c:	85 b9       	out	0x05, r24	; 5
 46e:	2c 98       	cbi	0x05, 4	; 5
 470:	46 98       	cbi	0x08, 6	; 8
 472:	47 98       	cbi	0x08, 7	; 8
 474:	84 b1       	in	r24, 0x04	; 4
 476:	8f 61       	ori	r24, 0x1F	; 31
 478:	84 b9       	out	0x04, r24	; 4
 47a:	87 b1       	in	r24, 0x07	; 7
 47c:	80 6c       	ori	r24, 0xC0	; 192
 47e:	87 b9       	out	0x07, r24	; 7
 480:	8f e5       	ldi	r24, 0x5F	; 95
 482:	9a ee       	ldi	r25, 0xEA	; 234
 484:	01 97       	sbiw	r24, 0x01	; 1
 486:	f1 f7       	brne	.-4      	; 0x484 <lcd_init+0x1c>
 488:	00 c0       	rjmp	.+0      	; 0x48a <lcd_init+0x22>
 48a:	00 00       	nop
 48c:	85 b1       	in	r24, 0x05	; 5
 48e:	80 7f       	andi	r24, 0xF0	; 240
 490:	83 60       	ori	r24, 0x03	; 3
 492:	85 b9       	out	0x05, r24	; 5
 494:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_clk>
 498:	87 e0       	ldi	r24, 0x07	; 7
 49a:	90 e2       	ldi	r25, 0x20	; 32
 49c:	01 97       	sbiw	r24, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <lcd_init+0x34>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <lcd_init+0x3a>
 4a2:	00 00       	nop
 4a4:	85 b1       	in	r24, 0x05	; 5
 4a6:	80 7f       	andi	r24, 0xF0	; 240
 4a8:	83 60       	ori	r24, 0x03	; 3
 4aa:	85 b9       	out	0x05, r24	; 5
 4ac:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_clk>
 4b0:	87 ec       	ldi	r24, 0xC7	; 199
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	01 97       	sbiw	r24, 0x01	; 1
 4b6:	f1 f7       	brne	.-4      	; 0x4b4 <lcd_init+0x4c>
 4b8:	00 c0       	rjmp	.+0      	; 0x4ba <lcd_init+0x52>
 4ba:	00 00       	nop
 4bc:	85 b1       	in	r24, 0x05	; 5
 4be:	80 7f       	andi	r24, 0xF0	; 240
 4c0:	83 60       	ori	r24, 0x03	; 3
 4c2:	85 b9       	out	0x05, r24	; 5
 4c4:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_clk>
 4c8:	0e 94 b6 01 	call	0x36c	; 0x36c <lcd_busy_wait>
 4cc:	85 b1       	in	r24, 0x05	; 5
 4ce:	80 7f       	andi	r24, 0xF0	; 240
 4d0:	82 60       	ori	r24, 0x02	; 2
 4d2:	85 b9       	out	0x05, r24	; 5
 4d4:	0e 94 ab 01 	call	0x356	; 0x356 <lcd_clk>
 4d8:	84 e2       	ldi	r24, 0x24	; 36
 4da:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 4de:	8c e2       	ldi	r24, 0x2C	; 44
 4e0:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 4e4:	88 e0       	ldi	r24, 0x08	; 8
 4e6:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 4f0:	86 e0       	ldi	r24, 0x06	; 6
 4f2:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 4f6:	8f e0       	ldi	r24, 0x0F	; 15
 4f8:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 4fc:	80 ed       	ldi	r24, 0xD0	; 208
 4fe:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 502:	2c 9a       	sbi	0x05, 4	; 5
 504:	08 95       	ret

00000506 <lcd_putc>:
 506:	3f 92       	push	r3
 508:	4f 92       	push	r4
 50a:	5f 92       	push	r5
 50c:	6f 92       	push	r6
 50e:	7f 92       	push	r7
 510:	8f 92       	push	r8
 512:	9f 92       	push	r9
 514:	af 92       	push	r10
 516:	bf 92       	push	r11
 518:	cf 92       	push	r12
 51a:	df 92       	push	r13
 51c:	ef 92       	push	r14
 51e:	ff 92       	push	r15
 520:	0f 93       	push	r16
 522:	1f 93       	push	r17
 524:	cf 93       	push	r28
 526:	df 93       	push	r29
 528:	cd b7       	in	r28, 0x3d	; 61
 52a:	de b7       	in	r29, 0x3e	; 62
 52c:	e0 97       	sbiw	r28, 0x30	; 48
 52e:	0f b6       	in	r0, 0x3f	; 63
 530:	f8 94       	cli
 532:	de bf       	out	0x3e, r29	; 62
 534:	0f be       	out	0x3f, r0	; 63
 536:	cd bf       	out	0x3d, r28	; 61
 538:	8a 30       	cpi	r24, 0x0A	; 10
 53a:	09 f4       	brne	.+2      	; 0x53e <lcd_putc+0x38>
 53c:	81 c0       	rjmp	.+258    	; 0x640 <lcd_putc+0x13a>
 53e:	38 2e       	mov	r3, r24
 540:	80 91 ba 01 	lds	r24, 0x01BA
 544:	81 11       	cpse	r24, r1
 546:	1d c0       	rjmp	.+58     	; 0x582 <lcd_putc+0x7c>
 548:	83 2d       	mov	r24, r3
 54a:	0e 94 05 02 	call	0x40a	; 0x40a <lcd_dwrite>
 54e:	81 e0       	ldi	r24, 0x01	; 1
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	e0 96       	adiw	r28, 0x30	; 48
 554:	0f b6       	in	r0, 0x3f	; 63
 556:	f8 94       	cli
 558:	de bf       	out	0x3e, r29	; 62
 55a:	0f be       	out	0x3f, r0	; 63
 55c:	cd bf       	out	0x3d, r28	; 61
 55e:	df 91       	pop	r29
 560:	cf 91       	pop	r28
 562:	1f 91       	pop	r17
 564:	0f 91       	pop	r16
 566:	ff 90       	pop	r15
 568:	ef 90       	pop	r14
 56a:	df 90       	pop	r13
 56c:	cf 90       	pop	r12
 56e:	bf 90       	pop	r11
 570:	af 90       	pop	r10
 572:	9f 90       	pop	r9
 574:	8f 90       	pop	r8
 576:	7f 90       	pop	r7
 578:	6f 90       	pop	r6
 57a:	5f 90       	pop	r5
 57c:	4f 90       	pop	r4
 57e:	3f 90       	pop	r3
 580:	08 95       	ret
 582:	80 ec       	ldi	r24, 0xC0	; 192
 584:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 588:	8e 01       	movw	r16, r28
 58a:	0f 5f       	subi	r16, 0xFF	; 255
 58c:	1f 4f       	sbci	r17, 0xFF	; 255
 58e:	4e 01       	movw	r8, r28
 590:	81 e1       	ldi	r24, 0x11	; 17
 592:	88 0e       	add	r8, r24
 594:	91 1c       	adc	r9, r1
 596:	78 01       	movw	r14, r16
 598:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <lcd_dread>
 59c:	f7 01       	movw	r30, r14
 59e:	81 93       	st	Z+, r24
 5a0:	7f 01       	movw	r14, r30
 5a2:	e8 15       	cp	r30, r8
 5a4:	f9 05       	cpc	r31, r9
 5a6:	c1 f7       	brne	.-16     	; 0x598 <lcd_putc+0x92>
 5a8:	80 e9       	ldi	r24, 0x90	; 144
 5aa:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 5ae:	64 01       	movw	r12, r8
 5b0:	5e 01       	movw	r10, r28
 5b2:	f1 e2       	ldi	r31, 0x21	; 33
 5b4:	af 0e       	add	r10, r31
 5b6:	b1 1c       	adc	r11, r1
 5b8:	74 01       	movw	r14, r8
 5ba:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <lcd_dread>
 5be:	f7 01       	movw	r30, r14
 5c0:	81 93       	st	Z+, r24
 5c2:	7f 01       	movw	r14, r30
 5c4:	ea 15       	cp	r30, r10
 5c6:	fb 05       	cpc	r31, r11
 5c8:	c1 f7       	brne	.-16     	; 0x5ba <lcd_putc+0xb4>
 5ca:	80 ed       	ldi	r24, 0xD0	; 208
 5cc:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 5d0:	75 01       	movw	r14, r10
 5d2:	3e 01       	movw	r6, r28
 5d4:	f1 e3       	ldi	r31, 0x31	; 49
 5d6:	6f 0e       	add	r6, r31
 5d8:	71 1c       	adc	r7, r1
 5da:	25 01       	movw	r4, r10
 5dc:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <lcd_dread>
 5e0:	f2 01       	movw	r30, r4
 5e2:	81 93       	st	Z+, r24
 5e4:	2f 01       	movw	r4, r30
 5e6:	e6 15       	cp	r30, r6
 5e8:	f7 05       	cpc	r31, r7
 5ea:	c1 f7       	brne	.-16     	; 0x5dc <lcd_putc+0xd6>
 5ec:	81 e0       	ldi	r24, 0x01	; 1
 5ee:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 5f2:	80 e8       	ldi	r24, 0x80	; 128
 5f4:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 5f8:	f8 01       	movw	r30, r16
 5fa:	81 91       	ld	r24, Z+
 5fc:	8f 01       	movw	r16, r30
 5fe:	0e 94 05 02 	call	0x40a	; 0x40a <lcd_dwrite>
 602:	80 16       	cp	r8, r16
 604:	91 06       	cpc	r9, r17
 606:	c1 f7       	brne	.-16     	; 0x5f8 <lcd_putc+0xf2>
 608:	80 ec       	ldi	r24, 0xC0	; 192
 60a:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 60e:	f6 01       	movw	r30, r12
 610:	81 91       	ld	r24, Z+
 612:	6f 01       	movw	r12, r30
 614:	0e 94 05 02 	call	0x40a	; 0x40a <lcd_dwrite>
 618:	ac 14       	cp	r10, r12
 61a:	bd 04       	cpc	r11, r13
 61c:	c1 f7       	brne	.-16     	; 0x60e <lcd_putc+0x108>
 61e:	80 e9       	ldi	r24, 0x90	; 144
 620:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 624:	f7 01       	movw	r30, r14
 626:	81 91       	ld	r24, Z+
 628:	7f 01       	movw	r14, r30
 62a:	0e 94 05 02 	call	0x40a	; 0x40a <lcd_dwrite>
 62e:	6e 14       	cp	r6, r14
 630:	7f 04       	cpc	r7, r15
 632:	c1 f7       	brne	.-16     	; 0x624 <lcd_putc+0x11e>
 634:	80 ed       	ldi	r24, 0xD0	; 208
 636:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_iwrite>
 63a:	10 92 ba 01 	sts	0x01BA, r1
 63e:	84 cf       	rjmp	.-248    	; 0x548 <lcd_putc+0x42>
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	80 93 ba 01 	sts	0x01BA, r24
 646:	83 cf       	rjmp	.-250    	; 0x54e <lcd_putc+0x48>

00000648 <__divmodhi4>:
 648:	97 fb       	bst	r25, 7
 64a:	07 2e       	mov	r0, r23
 64c:	16 f4       	brtc	.+4      	; 0x652 <__divmodhi4+0xa>
 64e:	00 94       	com	r0
 650:	07 d0       	rcall	.+14     	; 0x660 <__divmodhi4_neg1>
 652:	77 fd       	sbrc	r23, 7
 654:	09 d0       	rcall	.+18     	; 0x668 <__divmodhi4_neg2>
 656:	0e 94 57 03 	call	0x6ae	; 0x6ae <__udivmodhi4>
 65a:	07 fc       	sbrc	r0, 7
 65c:	05 d0       	rcall	.+10     	; 0x668 <__divmodhi4_neg2>
 65e:	3e f4       	brtc	.+14     	; 0x66e <__divmodhi4_exit>

00000660 <__divmodhi4_neg1>:
 660:	90 95       	com	r25
 662:	81 95       	neg	r24
 664:	9f 4f       	sbci	r25, 0xFF	; 255
 666:	08 95       	ret

00000668 <__divmodhi4_neg2>:
 668:	70 95       	com	r23
 66a:	61 95       	neg	r22
 66c:	7f 4f       	sbci	r23, 0xFF	; 255

0000066e <__divmodhi4_exit>:
 66e:	08 95       	ret

00000670 <__divmodsi4>:
 670:	05 2e       	mov	r0, r21
 672:	97 fb       	bst	r25, 7
 674:	1e f4       	brtc	.+6      	; 0x67c <__divmodsi4+0xc>
 676:	00 94       	com	r0
 678:	0e 94 4f 03 	call	0x69e	; 0x69e <__negsi2>
 67c:	57 fd       	sbrc	r21, 7
 67e:	07 d0       	rcall	.+14     	; 0x68e <__divmodsi4_neg2>
 680:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__udivmodsi4>
 684:	07 fc       	sbrc	r0, 7
 686:	03 d0       	rcall	.+6      	; 0x68e <__divmodsi4_neg2>
 688:	4e f4       	brtc	.+18     	; 0x69c <__divmodsi4_exit>
 68a:	0c 94 4f 03 	jmp	0x69e	; 0x69e <__negsi2>

0000068e <__divmodsi4_neg2>:
 68e:	50 95       	com	r21
 690:	40 95       	com	r20
 692:	30 95       	com	r19
 694:	21 95       	neg	r18
 696:	3f 4f       	sbci	r19, 0xFF	; 255
 698:	4f 4f       	sbci	r20, 0xFF	; 255
 69a:	5f 4f       	sbci	r21, 0xFF	; 255

0000069c <__divmodsi4_exit>:
 69c:	08 95       	ret

0000069e <__negsi2>:
 69e:	90 95       	com	r25
 6a0:	80 95       	com	r24
 6a2:	70 95       	com	r23
 6a4:	61 95       	neg	r22
 6a6:	7f 4f       	sbci	r23, 0xFF	; 255
 6a8:	8f 4f       	sbci	r24, 0xFF	; 255
 6aa:	9f 4f       	sbci	r25, 0xFF	; 255
 6ac:	08 95       	ret

000006ae <__udivmodhi4>:
 6ae:	aa 1b       	sub	r26, r26
 6b0:	bb 1b       	sub	r27, r27
 6b2:	51 e1       	ldi	r21, 0x11	; 17
 6b4:	07 c0       	rjmp	.+14     	; 0x6c4 <__udivmodhi4_ep>

000006b6 <__udivmodhi4_loop>:
 6b6:	aa 1f       	adc	r26, r26
 6b8:	bb 1f       	adc	r27, r27
 6ba:	a6 17       	cp	r26, r22
 6bc:	b7 07       	cpc	r27, r23
 6be:	10 f0       	brcs	.+4      	; 0x6c4 <__udivmodhi4_ep>
 6c0:	a6 1b       	sub	r26, r22
 6c2:	b7 0b       	sbc	r27, r23

000006c4 <__udivmodhi4_ep>:
 6c4:	88 1f       	adc	r24, r24
 6c6:	99 1f       	adc	r25, r25
 6c8:	5a 95       	dec	r21
 6ca:	a9 f7       	brne	.-22     	; 0x6b6 <__udivmodhi4_loop>
 6cc:	80 95       	com	r24
 6ce:	90 95       	com	r25
 6d0:	bc 01       	movw	r22, r24
 6d2:	cd 01       	movw	r24, r26
 6d4:	08 95       	ret

000006d6 <__udivmodsi4>:
 6d6:	a1 e2       	ldi	r26, 0x21	; 33
 6d8:	1a 2e       	mov	r1, r26
 6da:	aa 1b       	sub	r26, r26
 6dc:	bb 1b       	sub	r27, r27
 6de:	fd 01       	movw	r30, r26
 6e0:	0d c0       	rjmp	.+26     	; 0x6fc <__udivmodsi4_ep>

000006e2 <__udivmodsi4_loop>:
 6e2:	aa 1f       	adc	r26, r26
 6e4:	bb 1f       	adc	r27, r27
 6e6:	ee 1f       	adc	r30, r30
 6e8:	ff 1f       	adc	r31, r31
 6ea:	a2 17       	cp	r26, r18
 6ec:	b3 07       	cpc	r27, r19
 6ee:	e4 07       	cpc	r30, r20
 6f0:	f5 07       	cpc	r31, r21
 6f2:	20 f0       	brcs	.+8      	; 0x6fc <__udivmodsi4_ep>
 6f4:	a2 1b       	sub	r26, r18
 6f6:	b3 0b       	sbc	r27, r19
 6f8:	e4 0b       	sbc	r30, r20
 6fa:	f5 0b       	sbc	r31, r21

000006fc <__udivmodsi4_ep>:
 6fc:	66 1f       	adc	r22, r22
 6fe:	77 1f       	adc	r23, r23
 700:	88 1f       	adc	r24, r24
 702:	99 1f       	adc	r25, r25
 704:	1a 94       	dec	r1
 706:	69 f7       	brne	.-38     	; 0x6e2 <__udivmodsi4_loop>
 708:	60 95       	com	r22
 70a:	70 95       	com	r23
 70c:	80 95       	com	r24
 70e:	90 95       	com	r25
 710:	9b 01       	movw	r18, r22
 712:	ac 01       	movw	r20, r24
 714:	bd 01       	movw	r22, r26
 716:	cf 01       	movw	r24, r30
 718:	08 95       	ret

0000071a <printf>:
 71a:	a0 e0       	ldi	r26, 0x00	; 0
 71c:	b0 e0       	ldi	r27, 0x00	; 0
 71e:	e3 e9       	ldi	r30, 0x93	; 147
 720:	f3 e0       	ldi	r31, 0x03	; 3
 722:	0c 94 31 06 	jmp	0xc62	; 0xc62 <__prologue_saves__+0x20>
 726:	ae 01       	movw	r20, r28
 728:	4b 5f       	subi	r20, 0xFB	; 251
 72a:	5f 4f       	sbci	r21, 0xFF	; 255
 72c:	fa 01       	movw	r30, r20
 72e:	61 91       	ld	r22, Z+
 730:	71 91       	ld	r23, Z+
 732:	af 01       	movw	r20, r30
 734:	80 91 bd 01 	lds	r24, 0x01BD
 738:	90 91 be 01 	lds	r25, 0x01BE
 73c:	0e 94 a3 03 	call	0x746	; 0x746 <vfprintf>
 740:	e2 e0       	ldi	r30, 0x02	; 2
 742:	0c 94 4d 06 	jmp	0xc9a	; 0xc9a <__epilogue_restores__+0x20>

00000746 <vfprintf>:
 746:	ac e0       	ldi	r26, 0x0C	; 12
 748:	b0 e0       	ldi	r27, 0x00	; 0
 74a:	e9 ea       	ldi	r30, 0xA9	; 169
 74c:	f3 e0       	ldi	r31, 0x03	; 3
 74e:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__prologue_saves__>
 752:	7c 01       	movw	r14, r24
 754:	6b 01       	movw	r12, r22
 756:	8a 01       	movw	r16, r20
 758:	fc 01       	movw	r30, r24
 75a:	17 82       	std	Z+7, r1	; 0x07
 75c:	16 82       	std	Z+6, r1	; 0x06
 75e:	83 81       	ldd	r24, Z+3	; 0x03
 760:	81 ff       	sbrs	r24, 1
 762:	bd c1       	rjmp	.+890    	; 0xade <__stack+0x1df>
 764:	ce 01       	movw	r24, r28
 766:	01 96       	adiw	r24, 0x01	; 1
 768:	4c 01       	movw	r8, r24
 76a:	f7 01       	movw	r30, r14
 76c:	93 81       	ldd	r25, Z+3	; 0x03
 76e:	f6 01       	movw	r30, r12
 770:	93 fd       	sbrc	r25, 3
 772:	85 91       	lpm	r24, Z+
 774:	93 ff       	sbrs	r25, 3
 776:	81 91       	ld	r24, Z+
 778:	6f 01       	movw	r12, r30
 77a:	88 23       	and	r24, r24
 77c:	09 f4       	brne	.+2      	; 0x780 <vfprintf+0x3a>
 77e:	ab c1       	rjmp	.+854    	; 0xad6 <__stack+0x1d7>
 780:	85 32       	cpi	r24, 0x25	; 37
 782:	39 f4       	brne	.+14     	; 0x792 <vfprintf+0x4c>
 784:	93 fd       	sbrc	r25, 3
 786:	85 91       	lpm	r24, Z+
 788:	93 ff       	sbrs	r25, 3
 78a:	81 91       	ld	r24, Z+
 78c:	6f 01       	movw	r12, r30
 78e:	85 32       	cpi	r24, 0x25	; 37
 790:	29 f4       	brne	.+10     	; 0x79c <vfprintf+0x56>
 792:	b7 01       	movw	r22, r14
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 94 8b 05 	call	0xb16	; 0xb16 <fputc>
 79a:	e7 cf       	rjmp	.-50     	; 0x76a <vfprintf+0x24>
 79c:	51 2c       	mov	r5, r1
 79e:	31 2c       	mov	r3, r1
 7a0:	20 e0       	ldi	r18, 0x00	; 0
 7a2:	20 32       	cpi	r18, 0x20	; 32
 7a4:	a0 f4       	brcc	.+40     	; 0x7ce <vfprintf+0x88>
 7a6:	8b 32       	cpi	r24, 0x2B	; 43
 7a8:	69 f0       	breq	.+26     	; 0x7c4 <vfprintf+0x7e>
 7aa:	30 f4       	brcc	.+12     	; 0x7b8 <vfprintf+0x72>
 7ac:	80 32       	cpi	r24, 0x20	; 32
 7ae:	59 f0       	breq	.+22     	; 0x7c6 <vfprintf+0x80>
 7b0:	83 32       	cpi	r24, 0x23	; 35
 7b2:	69 f4       	brne	.+26     	; 0x7ce <vfprintf+0x88>
 7b4:	20 61       	ori	r18, 0x10	; 16
 7b6:	2c c0       	rjmp	.+88     	; 0x810 <vfprintf+0xca>
 7b8:	8d 32       	cpi	r24, 0x2D	; 45
 7ba:	39 f0       	breq	.+14     	; 0x7ca <vfprintf+0x84>
 7bc:	80 33       	cpi	r24, 0x30	; 48
 7be:	39 f4       	brne	.+14     	; 0x7ce <vfprintf+0x88>
 7c0:	21 60       	ori	r18, 0x01	; 1
 7c2:	26 c0       	rjmp	.+76     	; 0x810 <vfprintf+0xca>
 7c4:	22 60       	ori	r18, 0x02	; 2
 7c6:	24 60       	ori	r18, 0x04	; 4
 7c8:	23 c0       	rjmp	.+70     	; 0x810 <vfprintf+0xca>
 7ca:	28 60       	ori	r18, 0x08	; 8
 7cc:	21 c0       	rjmp	.+66     	; 0x810 <vfprintf+0xca>
 7ce:	27 fd       	sbrc	r18, 7
 7d0:	27 c0       	rjmp	.+78     	; 0x820 <vfprintf+0xda>
 7d2:	30 ed       	ldi	r19, 0xD0	; 208
 7d4:	38 0f       	add	r19, r24
 7d6:	3a 30       	cpi	r19, 0x0A	; 10
 7d8:	78 f4       	brcc	.+30     	; 0x7f8 <vfprintf+0xb2>
 7da:	26 ff       	sbrs	r18, 6
 7dc:	06 c0       	rjmp	.+12     	; 0x7ea <vfprintf+0xa4>
 7de:	fa e0       	ldi	r31, 0x0A	; 10
 7e0:	5f 9e       	mul	r5, r31
 7e2:	30 0d       	add	r19, r0
 7e4:	11 24       	eor	r1, r1
 7e6:	53 2e       	mov	r5, r19
 7e8:	13 c0       	rjmp	.+38     	; 0x810 <vfprintf+0xca>
 7ea:	8a e0       	ldi	r24, 0x0A	; 10
 7ec:	38 9e       	mul	r3, r24
 7ee:	30 0d       	add	r19, r0
 7f0:	11 24       	eor	r1, r1
 7f2:	33 2e       	mov	r3, r19
 7f4:	20 62       	ori	r18, 0x20	; 32
 7f6:	0c c0       	rjmp	.+24     	; 0x810 <vfprintf+0xca>
 7f8:	8e 32       	cpi	r24, 0x2E	; 46
 7fa:	21 f4       	brne	.+8      	; 0x804 <vfprintf+0xbe>
 7fc:	26 fd       	sbrc	r18, 6
 7fe:	6b c1       	rjmp	.+726    	; 0xad6 <__stack+0x1d7>
 800:	20 64       	ori	r18, 0x40	; 64
 802:	06 c0       	rjmp	.+12     	; 0x810 <vfprintf+0xca>
 804:	8c 36       	cpi	r24, 0x6C	; 108
 806:	11 f4       	brne	.+4      	; 0x80c <vfprintf+0xc6>
 808:	20 68       	ori	r18, 0x80	; 128
 80a:	02 c0       	rjmp	.+4      	; 0x810 <vfprintf+0xca>
 80c:	88 36       	cpi	r24, 0x68	; 104
 80e:	41 f4       	brne	.+16     	; 0x820 <vfprintf+0xda>
 810:	f6 01       	movw	r30, r12
 812:	93 fd       	sbrc	r25, 3
 814:	85 91       	lpm	r24, Z+
 816:	93 ff       	sbrs	r25, 3
 818:	81 91       	ld	r24, Z+
 81a:	6f 01       	movw	r12, r30
 81c:	81 11       	cpse	r24, r1
 81e:	c1 cf       	rjmp	.-126    	; 0x7a2 <vfprintf+0x5c>
 820:	98 2f       	mov	r25, r24
 822:	9f 7d       	andi	r25, 0xDF	; 223
 824:	95 54       	subi	r25, 0x45	; 69
 826:	93 30       	cpi	r25, 0x03	; 3
 828:	28 f4       	brcc	.+10     	; 0x834 <vfprintf+0xee>
 82a:	0c 5f       	subi	r16, 0xFC	; 252
 82c:	1f 4f       	sbci	r17, 0xFF	; 255
 82e:	ff e3       	ldi	r31, 0x3F	; 63
 830:	f9 83       	std	Y+1, r31	; 0x01
 832:	0d c0       	rjmp	.+26     	; 0x84e <vfprintf+0x108>
 834:	83 36       	cpi	r24, 0x63	; 99
 836:	31 f0       	breq	.+12     	; 0x844 <vfprintf+0xfe>
 838:	83 37       	cpi	r24, 0x73	; 115
 83a:	71 f0       	breq	.+28     	; 0x858 <vfprintf+0x112>
 83c:	83 35       	cpi	r24, 0x53	; 83
 83e:	09 f0       	breq	.+2      	; 0x842 <vfprintf+0xfc>
 840:	5b c0       	rjmp	.+182    	; 0x8f8 <vfprintf+0x1b2>
 842:	22 c0       	rjmp	.+68     	; 0x888 <vfprintf+0x142>
 844:	f8 01       	movw	r30, r16
 846:	80 81       	ld	r24, Z
 848:	89 83       	std	Y+1, r24	; 0x01
 84a:	0e 5f       	subi	r16, 0xFE	; 254
 84c:	1f 4f       	sbci	r17, 0xFF	; 255
 84e:	44 24       	eor	r4, r4
 850:	43 94       	inc	r4
 852:	51 2c       	mov	r5, r1
 854:	54 01       	movw	r10, r8
 856:	15 c0       	rjmp	.+42     	; 0x882 <vfprintf+0x13c>
 858:	38 01       	movw	r6, r16
 85a:	f2 e0       	ldi	r31, 0x02	; 2
 85c:	6f 0e       	add	r6, r31
 85e:	71 1c       	adc	r7, r1
 860:	f8 01       	movw	r30, r16
 862:	a0 80       	ld	r10, Z
 864:	b1 80       	ldd	r11, Z+1	; 0x01
 866:	26 ff       	sbrs	r18, 6
 868:	03 c0       	rjmp	.+6      	; 0x870 <vfprintf+0x12a>
 86a:	65 2d       	mov	r22, r5
 86c:	70 e0       	ldi	r23, 0x00	; 0
 86e:	02 c0       	rjmp	.+4      	; 0x874 <vfprintf+0x12e>
 870:	6f ef       	ldi	r22, 0xFF	; 255
 872:	7f ef       	ldi	r23, 0xFF	; 255
 874:	c5 01       	movw	r24, r10
 876:	2c 87       	std	Y+12, r18	; 0x0c
 878:	0e 94 80 05 	call	0xb00	; 0xb00 <strnlen>
 87c:	2c 01       	movw	r4, r24
 87e:	83 01       	movw	r16, r6
 880:	2c 85       	ldd	r18, Y+12	; 0x0c
 882:	2f 77       	andi	r18, 0x7F	; 127
 884:	22 2e       	mov	r2, r18
 886:	17 c0       	rjmp	.+46     	; 0x8b6 <vfprintf+0x170>
 888:	38 01       	movw	r6, r16
 88a:	f2 e0       	ldi	r31, 0x02	; 2
 88c:	6f 0e       	add	r6, r31
 88e:	71 1c       	adc	r7, r1
 890:	f8 01       	movw	r30, r16
 892:	a0 80       	ld	r10, Z
 894:	b1 80       	ldd	r11, Z+1	; 0x01
 896:	26 ff       	sbrs	r18, 6
 898:	03 c0       	rjmp	.+6      	; 0x8a0 <vfprintf+0x15a>
 89a:	65 2d       	mov	r22, r5
 89c:	70 e0       	ldi	r23, 0x00	; 0
 89e:	02 c0       	rjmp	.+4      	; 0x8a4 <vfprintf+0x15e>
 8a0:	6f ef       	ldi	r22, 0xFF	; 255
 8a2:	7f ef       	ldi	r23, 0xFF	; 255
 8a4:	c5 01       	movw	r24, r10
 8a6:	2c 87       	std	Y+12, r18	; 0x0c
 8a8:	0e 94 75 05 	call	0xaea	; 0xaea <strnlen_P>
 8ac:	2c 01       	movw	r4, r24
 8ae:	2c 85       	ldd	r18, Y+12	; 0x0c
 8b0:	20 68       	ori	r18, 0x80	; 128
 8b2:	22 2e       	mov	r2, r18
 8b4:	83 01       	movw	r16, r6
 8b6:	23 fc       	sbrc	r2, 3
 8b8:	1b c0       	rjmp	.+54     	; 0x8f0 <vfprintf+0x1aa>
 8ba:	83 2d       	mov	r24, r3
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	48 16       	cp	r4, r24
 8c0:	59 06       	cpc	r5, r25
 8c2:	b0 f4       	brcc	.+44     	; 0x8f0 <vfprintf+0x1aa>
 8c4:	b7 01       	movw	r22, r14
 8c6:	80 e2       	ldi	r24, 0x20	; 32
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	0e 94 8b 05 	call	0xb16	; 0xb16 <fputc>
 8ce:	3a 94       	dec	r3
 8d0:	f4 cf       	rjmp	.-24     	; 0x8ba <vfprintf+0x174>
 8d2:	f5 01       	movw	r30, r10
 8d4:	27 fc       	sbrc	r2, 7
 8d6:	85 91       	lpm	r24, Z+
 8d8:	27 fe       	sbrs	r2, 7
 8da:	81 91       	ld	r24, Z+
 8dc:	5f 01       	movw	r10, r30
 8de:	b7 01       	movw	r22, r14
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	0e 94 8b 05 	call	0xb16	; 0xb16 <fputc>
 8e6:	31 10       	cpse	r3, r1
 8e8:	3a 94       	dec	r3
 8ea:	f1 e0       	ldi	r31, 0x01	; 1
 8ec:	4f 1a       	sub	r4, r31
 8ee:	51 08       	sbc	r5, r1
 8f0:	41 14       	cp	r4, r1
 8f2:	51 04       	cpc	r5, r1
 8f4:	71 f7       	brne	.-36     	; 0x8d2 <vfprintf+0x18c>
 8f6:	e5 c0       	rjmp	.+458    	; 0xac2 <__stack+0x1c3>
 8f8:	84 36       	cpi	r24, 0x64	; 100
 8fa:	11 f0       	breq	.+4      	; 0x900 <__stack+0x1>
 8fc:	89 36       	cpi	r24, 0x69	; 105
 8fe:	39 f5       	brne	.+78     	; 0x94e <__stack+0x4f>
 900:	f8 01       	movw	r30, r16
 902:	27 ff       	sbrs	r18, 7
 904:	07 c0       	rjmp	.+14     	; 0x914 <__stack+0x15>
 906:	60 81       	ld	r22, Z
 908:	71 81       	ldd	r23, Z+1	; 0x01
 90a:	82 81       	ldd	r24, Z+2	; 0x02
 90c:	93 81       	ldd	r25, Z+3	; 0x03
 90e:	0c 5f       	subi	r16, 0xFC	; 252
 910:	1f 4f       	sbci	r17, 0xFF	; 255
 912:	08 c0       	rjmp	.+16     	; 0x924 <__stack+0x25>
 914:	60 81       	ld	r22, Z
 916:	71 81       	ldd	r23, Z+1	; 0x01
 918:	07 2e       	mov	r0, r23
 91a:	00 0c       	add	r0, r0
 91c:	88 0b       	sbc	r24, r24
 91e:	99 0b       	sbc	r25, r25
 920:	0e 5f       	subi	r16, 0xFE	; 254
 922:	1f 4f       	sbci	r17, 0xFF	; 255
 924:	2f 76       	andi	r18, 0x6F	; 111
 926:	72 2e       	mov	r7, r18
 928:	97 ff       	sbrs	r25, 7
 92a:	09 c0       	rjmp	.+18     	; 0x93e <__stack+0x3f>
 92c:	90 95       	com	r25
 92e:	80 95       	com	r24
 930:	70 95       	com	r23
 932:	61 95       	neg	r22
 934:	7f 4f       	sbci	r23, 0xFF	; 255
 936:	8f 4f       	sbci	r24, 0xFF	; 255
 938:	9f 4f       	sbci	r25, 0xFF	; 255
 93a:	20 68       	ori	r18, 0x80	; 128
 93c:	72 2e       	mov	r7, r18
 93e:	2a e0       	ldi	r18, 0x0A	; 10
 940:	30 e0       	ldi	r19, 0x00	; 0
 942:	a4 01       	movw	r20, r8
 944:	0e 94 c3 05 	call	0xb86	; 0xb86 <__ultoa_invert>
 948:	a8 2e       	mov	r10, r24
 94a:	a8 18       	sub	r10, r8
 94c:	44 c0       	rjmp	.+136    	; 0x9d6 <__stack+0xd7>
 94e:	85 37       	cpi	r24, 0x75	; 117
 950:	29 f4       	brne	.+10     	; 0x95c <__stack+0x5d>
 952:	2f 7e       	andi	r18, 0xEF	; 239
 954:	b2 2e       	mov	r11, r18
 956:	2a e0       	ldi	r18, 0x0A	; 10
 958:	30 e0       	ldi	r19, 0x00	; 0
 95a:	25 c0       	rjmp	.+74     	; 0x9a6 <__stack+0xa7>
 95c:	f2 2f       	mov	r31, r18
 95e:	f9 7f       	andi	r31, 0xF9	; 249
 960:	bf 2e       	mov	r11, r31
 962:	8f 36       	cpi	r24, 0x6F	; 111
 964:	c1 f0       	breq	.+48     	; 0x996 <__stack+0x97>
 966:	18 f4       	brcc	.+6      	; 0x96e <__stack+0x6f>
 968:	88 35       	cpi	r24, 0x58	; 88
 96a:	79 f0       	breq	.+30     	; 0x98a <__stack+0x8b>
 96c:	b4 c0       	rjmp	.+360    	; 0xad6 <__stack+0x1d7>
 96e:	80 37       	cpi	r24, 0x70	; 112
 970:	19 f0       	breq	.+6      	; 0x978 <__stack+0x79>
 972:	88 37       	cpi	r24, 0x78	; 120
 974:	21 f0       	breq	.+8      	; 0x97e <__stack+0x7f>
 976:	af c0       	rjmp	.+350    	; 0xad6 <__stack+0x1d7>
 978:	2f 2f       	mov	r18, r31
 97a:	20 61       	ori	r18, 0x10	; 16
 97c:	b2 2e       	mov	r11, r18
 97e:	b4 fe       	sbrs	r11, 4
 980:	0d c0       	rjmp	.+26     	; 0x99c <__stack+0x9d>
 982:	8b 2d       	mov	r24, r11
 984:	84 60       	ori	r24, 0x04	; 4
 986:	b8 2e       	mov	r11, r24
 988:	09 c0       	rjmp	.+18     	; 0x99c <__stack+0x9d>
 98a:	24 ff       	sbrs	r18, 4
 98c:	0a c0       	rjmp	.+20     	; 0x9a2 <__stack+0xa3>
 98e:	9f 2f       	mov	r25, r31
 990:	96 60       	ori	r25, 0x06	; 6
 992:	b9 2e       	mov	r11, r25
 994:	06 c0       	rjmp	.+12     	; 0x9a2 <__stack+0xa3>
 996:	28 e0       	ldi	r18, 0x08	; 8
 998:	30 e0       	ldi	r19, 0x00	; 0
 99a:	05 c0       	rjmp	.+10     	; 0x9a6 <__stack+0xa7>
 99c:	20 e1       	ldi	r18, 0x10	; 16
 99e:	30 e0       	ldi	r19, 0x00	; 0
 9a0:	02 c0       	rjmp	.+4      	; 0x9a6 <__stack+0xa7>
 9a2:	20 e1       	ldi	r18, 0x10	; 16
 9a4:	32 e0       	ldi	r19, 0x02	; 2
 9a6:	f8 01       	movw	r30, r16
 9a8:	b7 fe       	sbrs	r11, 7
 9aa:	07 c0       	rjmp	.+14     	; 0x9ba <__stack+0xbb>
 9ac:	60 81       	ld	r22, Z
 9ae:	71 81       	ldd	r23, Z+1	; 0x01
 9b0:	82 81       	ldd	r24, Z+2	; 0x02
 9b2:	93 81       	ldd	r25, Z+3	; 0x03
 9b4:	0c 5f       	subi	r16, 0xFC	; 252
 9b6:	1f 4f       	sbci	r17, 0xFF	; 255
 9b8:	06 c0       	rjmp	.+12     	; 0x9c6 <__stack+0xc7>
 9ba:	60 81       	ld	r22, Z
 9bc:	71 81       	ldd	r23, Z+1	; 0x01
 9be:	80 e0       	ldi	r24, 0x00	; 0
 9c0:	90 e0       	ldi	r25, 0x00	; 0
 9c2:	0e 5f       	subi	r16, 0xFE	; 254
 9c4:	1f 4f       	sbci	r17, 0xFF	; 255
 9c6:	a4 01       	movw	r20, r8
 9c8:	0e 94 c3 05 	call	0xb86	; 0xb86 <__ultoa_invert>
 9cc:	a8 2e       	mov	r10, r24
 9ce:	a8 18       	sub	r10, r8
 9d0:	fb 2d       	mov	r31, r11
 9d2:	ff 77       	andi	r31, 0x7F	; 127
 9d4:	7f 2e       	mov	r7, r31
 9d6:	76 fe       	sbrs	r7, 6
 9d8:	0b c0       	rjmp	.+22     	; 0x9f0 <__stack+0xf1>
 9da:	37 2d       	mov	r19, r7
 9dc:	3e 7f       	andi	r19, 0xFE	; 254
 9de:	a5 14       	cp	r10, r5
 9e0:	50 f4       	brcc	.+20     	; 0x9f6 <__stack+0xf7>
 9e2:	74 fe       	sbrs	r7, 4
 9e4:	0a c0       	rjmp	.+20     	; 0x9fa <__stack+0xfb>
 9e6:	72 fc       	sbrc	r7, 2
 9e8:	08 c0       	rjmp	.+16     	; 0x9fa <__stack+0xfb>
 9ea:	37 2d       	mov	r19, r7
 9ec:	3e 7e       	andi	r19, 0xEE	; 238
 9ee:	05 c0       	rjmp	.+10     	; 0x9fa <__stack+0xfb>
 9f0:	ba 2c       	mov	r11, r10
 9f2:	37 2d       	mov	r19, r7
 9f4:	03 c0       	rjmp	.+6      	; 0x9fc <__stack+0xfd>
 9f6:	ba 2c       	mov	r11, r10
 9f8:	01 c0       	rjmp	.+2      	; 0x9fc <__stack+0xfd>
 9fa:	b5 2c       	mov	r11, r5
 9fc:	34 ff       	sbrs	r19, 4
 9fe:	0d c0       	rjmp	.+26     	; 0xa1a <__stack+0x11b>
 a00:	fe 01       	movw	r30, r28
 a02:	ea 0d       	add	r30, r10
 a04:	f1 1d       	adc	r31, r1
 a06:	80 81       	ld	r24, Z
 a08:	80 33       	cpi	r24, 0x30	; 48
 a0a:	11 f4       	brne	.+4      	; 0xa10 <__stack+0x111>
 a0c:	39 7e       	andi	r19, 0xE9	; 233
 a0e:	09 c0       	rjmp	.+18     	; 0xa22 <__stack+0x123>
 a10:	32 ff       	sbrs	r19, 2
 a12:	06 c0       	rjmp	.+12     	; 0xa20 <__stack+0x121>
 a14:	b3 94       	inc	r11
 a16:	b3 94       	inc	r11
 a18:	04 c0       	rjmp	.+8      	; 0xa22 <__stack+0x123>
 a1a:	83 2f       	mov	r24, r19
 a1c:	86 78       	andi	r24, 0x86	; 134
 a1e:	09 f0       	breq	.+2      	; 0xa22 <__stack+0x123>
 a20:	b3 94       	inc	r11
 a22:	33 fd       	sbrc	r19, 3
 a24:	13 c0       	rjmp	.+38     	; 0xa4c <__stack+0x14d>
 a26:	30 ff       	sbrs	r19, 0
 a28:	06 c0       	rjmp	.+12     	; 0xa36 <__stack+0x137>
 a2a:	5a 2c       	mov	r5, r10
 a2c:	b3 14       	cp	r11, r3
 a2e:	18 f4       	brcc	.+6      	; 0xa36 <__stack+0x137>
 a30:	53 0c       	add	r5, r3
 a32:	5b 18       	sub	r5, r11
 a34:	b3 2c       	mov	r11, r3
 a36:	b3 14       	cp	r11, r3
 a38:	68 f4       	brcc	.+26     	; 0xa54 <__stack+0x155>
 a3a:	b7 01       	movw	r22, r14
 a3c:	80 e2       	ldi	r24, 0x20	; 32
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	3c 87       	std	Y+12, r19	; 0x0c
 a42:	0e 94 8b 05 	call	0xb16	; 0xb16 <fputc>
 a46:	b3 94       	inc	r11
 a48:	3c 85       	ldd	r19, Y+12	; 0x0c
 a4a:	f5 cf       	rjmp	.-22     	; 0xa36 <__stack+0x137>
 a4c:	b3 14       	cp	r11, r3
 a4e:	10 f4       	brcc	.+4      	; 0xa54 <__stack+0x155>
 a50:	3b 18       	sub	r3, r11
 a52:	01 c0       	rjmp	.+2      	; 0xa56 <__stack+0x157>
 a54:	31 2c       	mov	r3, r1
 a56:	34 ff       	sbrs	r19, 4
 a58:	12 c0       	rjmp	.+36     	; 0xa7e <__stack+0x17f>
 a5a:	b7 01       	movw	r22, r14
 a5c:	80 e3       	ldi	r24, 0x30	; 48
 a5e:	90 e0       	ldi	r25, 0x00	; 0
 a60:	3c 87       	std	Y+12, r19	; 0x0c
 a62:	0e 94 8b 05 	call	0xb16	; 0xb16 <fputc>
 a66:	3c 85       	ldd	r19, Y+12	; 0x0c
 a68:	32 ff       	sbrs	r19, 2
 a6a:	17 c0       	rjmp	.+46     	; 0xa9a <__stack+0x19b>
 a6c:	31 fd       	sbrc	r19, 1
 a6e:	03 c0       	rjmp	.+6      	; 0xa76 <__stack+0x177>
 a70:	88 e7       	ldi	r24, 0x78	; 120
 a72:	90 e0       	ldi	r25, 0x00	; 0
 a74:	02 c0       	rjmp	.+4      	; 0xa7a <__stack+0x17b>
 a76:	88 e5       	ldi	r24, 0x58	; 88
 a78:	90 e0       	ldi	r25, 0x00	; 0
 a7a:	b7 01       	movw	r22, r14
 a7c:	0c c0       	rjmp	.+24     	; 0xa96 <__stack+0x197>
 a7e:	83 2f       	mov	r24, r19
 a80:	86 78       	andi	r24, 0x86	; 134
 a82:	59 f0       	breq	.+22     	; 0xa9a <__stack+0x19b>
 a84:	31 ff       	sbrs	r19, 1
 a86:	02 c0       	rjmp	.+4      	; 0xa8c <__stack+0x18d>
 a88:	8b e2       	ldi	r24, 0x2B	; 43
 a8a:	01 c0       	rjmp	.+2      	; 0xa8e <__stack+0x18f>
 a8c:	80 e2       	ldi	r24, 0x20	; 32
 a8e:	37 fd       	sbrc	r19, 7
 a90:	8d e2       	ldi	r24, 0x2D	; 45
 a92:	b7 01       	movw	r22, r14
 a94:	90 e0       	ldi	r25, 0x00	; 0
 a96:	0e 94 8b 05 	call	0xb16	; 0xb16 <fputc>
 a9a:	a5 14       	cp	r10, r5
 a9c:	38 f4       	brcc	.+14     	; 0xaac <__stack+0x1ad>
 a9e:	b7 01       	movw	r22, r14
 aa0:	80 e3       	ldi	r24, 0x30	; 48
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	0e 94 8b 05 	call	0xb16	; 0xb16 <fputc>
 aa8:	5a 94       	dec	r5
 aaa:	f7 cf       	rjmp	.-18     	; 0xa9a <__stack+0x19b>
 aac:	aa 94       	dec	r10
 aae:	f4 01       	movw	r30, r8
 ab0:	ea 0d       	add	r30, r10
 ab2:	f1 1d       	adc	r31, r1
 ab4:	80 81       	ld	r24, Z
 ab6:	b7 01       	movw	r22, r14
 ab8:	90 e0       	ldi	r25, 0x00	; 0
 aba:	0e 94 8b 05 	call	0xb16	; 0xb16 <fputc>
 abe:	a1 10       	cpse	r10, r1
 ac0:	f5 cf       	rjmp	.-22     	; 0xaac <__stack+0x1ad>
 ac2:	33 20       	and	r3, r3
 ac4:	09 f4       	brne	.+2      	; 0xac8 <__stack+0x1c9>
 ac6:	51 ce       	rjmp	.-862    	; 0x76a <vfprintf+0x24>
 ac8:	b7 01       	movw	r22, r14
 aca:	80 e2       	ldi	r24, 0x20	; 32
 acc:	90 e0       	ldi	r25, 0x00	; 0
 ace:	0e 94 8b 05 	call	0xb16	; 0xb16 <fputc>
 ad2:	3a 94       	dec	r3
 ad4:	f6 cf       	rjmp	.-20     	; 0xac2 <__stack+0x1c3>
 ad6:	f7 01       	movw	r30, r14
 ad8:	86 81       	ldd	r24, Z+6	; 0x06
 ada:	97 81       	ldd	r25, Z+7	; 0x07
 adc:	02 c0       	rjmp	.+4      	; 0xae2 <__stack+0x1e3>
 ade:	8f ef       	ldi	r24, 0xFF	; 255
 ae0:	9f ef       	ldi	r25, 0xFF	; 255
 ae2:	2c 96       	adiw	r28, 0x0c	; 12
 ae4:	e2 e1       	ldi	r30, 0x12	; 18
 ae6:	0c 94 3d 06 	jmp	0xc7a	; 0xc7a <__epilogue_restores__>

00000aea <strnlen_P>:
 aea:	fc 01       	movw	r30, r24
 aec:	05 90       	lpm	r0, Z+
 aee:	61 50       	subi	r22, 0x01	; 1
 af0:	70 40       	sbci	r23, 0x00	; 0
 af2:	01 10       	cpse	r0, r1
 af4:	d8 f7       	brcc	.-10     	; 0xaec <strnlen_P+0x2>
 af6:	80 95       	com	r24
 af8:	90 95       	com	r25
 afa:	8e 0f       	add	r24, r30
 afc:	9f 1f       	adc	r25, r31
 afe:	08 95       	ret

00000b00 <strnlen>:
 b00:	fc 01       	movw	r30, r24
 b02:	61 50       	subi	r22, 0x01	; 1
 b04:	70 40       	sbci	r23, 0x00	; 0
 b06:	01 90       	ld	r0, Z+
 b08:	01 10       	cpse	r0, r1
 b0a:	d8 f7       	brcc	.-10     	; 0xb02 <strnlen+0x2>
 b0c:	80 95       	com	r24
 b0e:	90 95       	com	r25
 b10:	8e 0f       	add	r24, r30
 b12:	9f 1f       	adc	r25, r31
 b14:	08 95       	ret

00000b16 <fputc>:
 b16:	0f 93       	push	r16
 b18:	1f 93       	push	r17
 b1a:	cf 93       	push	r28
 b1c:	df 93       	push	r29
 b1e:	fb 01       	movw	r30, r22
 b20:	23 81       	ldd	r18, Z+3	; 0x03
 b22:	21 fd       	sbrc	r18, 1
 b24:	03 c0       	rjmp	.+6      	; 0xb2c <fputc+0x16>
 b26:	8f ef       	ldi	r24, 0xFF	; 255
 b28:	9f ef       	ldi	r25, 0xFF	; 255
 b2a:	28 c0       	rjmp	.+80     	; 0xb7c <fputc+0x66>
 b2c:	22 ff       	sbrs	r18, 2
 b2e:	16 c0       	rjmp	.+44     	; 0xb5c <fputc+0x46>
 b30:	46 81       	ldd	r20, Z+6	; 0x06
 b32:	57 81       	ldd	r21, Z+7	; 0x07
 b34:	24 81       	ldd	r18, Z+4	; 0x04
 b36:	35 81       	ldd	r19, Z+5	; 0x05
 b38:	42 17       	cp	r20, r18
 b3a:	53 07       	cpc	r21, r19
 b3c:	44 f4       	brge	.+16     	; 0xb4e <fputc+0x38>
 b3e:	a0 81       	ld	r26, Z
 b40:	b1 81       	ldd	r27, Z+1	; 0x01
 b42:	9d 01       	movw	r18, r26
 b44:	2f 5f       	subi	r18, 0xFF	; 255
 b46:	3f 4f       	sbci	r19, 0xFF	; 255
 b48:	31 83       	std	Z+1, r19	; 0x01
 b4a:	20 83       	st	Z, r18
 b4c:	8c 93       	st	X, r24
 b4e:	26 81       	ldd	r18, Z+6	; 0x06
 b50:	37 81       	ldd	r19, Z+7	; 0x07
 b52:	2f 5f       	subi	r18, 0xFF	; 255
 b54:	3f 4f       	sbci	r19, 0xFF	; 255
 b56:	37 83       	std	Z+7, r19	; 0x07
 b58:	26 83       	std	Z+6, r18	; 0x06
 b5a:	10 c0       	rjmp	.+32     	; 0xb7c <fputc+0x66>
 b5c:	eb 01       	movw	r28, r22
 b5e:	09 2f       	mov	r16, r25
 b60:	18 2f       	mov	r17, r24
 b62:	00 84       	ldd	r0, Z+8	; 0x08
 b64:	f1 85       	ldd	r31, Z+9	; 0x09
 b66:	e0 2d       	mov	r30, r0
 b68:	09 95       	icall
 b6a:	89 2b       	or	r24, r25
 b6c:	e1 f6       	brne	.-72     	; 0xb26 <fputc+0x10>
 b6e:	8e 81       	ldd	r24, Y+6	; 0x06
 b70:	9f 81       	ldd	r25, Y+7	; 0x07
 b72:	01 96       	adiw	r24, 0x01	; 1
 b74:	9f 83       	std	Y+7, r25	; 0x07
 b76:	8e 83       	std	Y+6, r24	; 0x06
 b78:	81 2f       	mov	r24, r17
 b7a:	90 2f       	mov	r25, r16
 b7c:	df 91       	pop	r29
 b7e:	cf 91       	pop	r28
 b80:	1f 91       	pop	r17
 b82:	0f 91       	pop	r16
 b84:	08 95       	ret

00000b86 <__ultoa_invert>:
 b86:	fa 01       	movw	r30, r20
 b88:	aa 27       	eor	r26, r26
 b8a:	28 30       	cpi	r18, 0x08	; 8
 b8c:	51 f1       	breq	.+84     	; 0xbe2 <__ultoa_invert+0x5c>
 b8e:	20 31       	cpi	r18, 0x10	; 16
 b90:	81 f1       	breq	.+96     	; 0xbf2 <__ultoa_invert+0x6c>
 b92:	e8 94       	clt
 b94:	6f 93       	push	r22
 b96:	6e 7f       	andi	r22, 0xFE	; 254
 b98:	6e 5f       	subi	r22, 0xFE	; 254
 b9a:	7f 4f       	sbci	r23, 0xFF	; 255
 b9c:	8f 4f       	sbci	r24, 0xFF	; 255
 b9e:	9f 4f       	sbci	r25, 0xFF	; 255
 ba0:	af 4f       	sbci	r26, 0xFF	; 255
 ba2:	b1 e0       	ldi	r27, 0x01	; 1
 ba4:	3e d0       	rcall	.+124    	; 0xc22 <__ultoa_invert+0x9c>
 ba6:	b4 e0       	ldi	r27, 0x04	; 4
 ba8:	3c d0       	rcall	.+120    	; 0xc22 <__ultoa_invert+0x9c>
 baa:	67 0f       	add	r22, r23
 bac:	78 1f       	adc	r23, r24
 bae:	89 1f       	adc	r24, r25
 bb0:	9a 1f       	adc	r25, r26
 bb2:	a1 1d       	adc	r26, r1
 bb4:	68 0f       	add	r22, r24
 bb6:	79 1f       	adc	r23, r25
 bb8:	8a 1f       	adc	r24, r26
 bba:	91 1d       	adc	r25, r1
 bbc:	a1 1d       	adc	r26, r1
 bbe:	6a 0f       	add	r22, r26
 bc0:	71 1d       	adc	r23, r1
 bc2:	81 1d       	adc	r24, r1
 bc4:	91 1d       	adc	r25, r1
 bc6:	a1 1d       	adc	r26, r1
 bc8:	20 d0       	rcall	.+64     	; 0xc0a <__ultoa_invert+0x84>
 bca:	09 f4       	brne	.+2      	; 0xbce <__ultoa_invert+0x48>
 bcc:	68 94       	set
 bce:	3f 91       	pop	r19
 bd0:	2a e0       	ldi	r18, 0x0A	; 10
 bd2:	26 9f       	mul	r18, r22
 bd4:	11 24       	eor	r1, r1
 bd6:	30 19       	sub	r19, r0
 bd8:	30 5d       	subi	r19, 0xD0	; 208
 bda:	31 93       	st	Z+, r19
 bdc:	de f6       	brtc	.-74     	; 0xb94 <__ultoa_invert+0xe>
 bde:	cf 01       	movw	r24, r30
 be0:	08 95       	ret
 be2:	46 2f       	mov	r20, r22
 be4:	47 70       	andi	r20, 0x07	; 7
 be6:	40 5d       	subi	r20, 0xD0	; 208
 be8:	41 93       	st	Z+, r20
 bea:	b3 e0       	ldi	r27, 0x03	; 3
 bec:	0f d0       	rcall	.+30     	; 0xc0c <__ultoa_invert+0x86>
 bee:	c9 f7       	brne	.-14     	; 0xbe2 <__ultoa_invert+0x5c>
 bf0:	f6 cf       	rjmp	.-20     	; 0xbde <__ultoa_invert+0x58>
 bf2:	46 2f       	mov	r20, r22
 bf4:	4f 70       	andi	r20, 0x0F	; 15
 bf6:	40 5d       	subi	r20, 0xD0	; 208
 bf8:	4a 33       	cpi	r20, 0x3A	; 58
 bfa:	18 f0       	brcs	.+6      	; 0xc02 <__ultoa_invert+0x7c>
 bfc:	49 5d       	subi	r20, 0xD9	; 217
 bfe:	31 fd       	sbrc	r19, 1
 c00:	40 52       	subi	r20, 0x20	; 32
 c02:	41 93       	st	Z+, r20
 c04:	02 d0       	rcall	.+4      	; 0xc0a <__ultoa_invert+0x84>
 c06:	a9 f7       	brne	.-22     	; 0xbf2 <__ultoa_invert+0x6c>
 c08:	ea cf       	rjmp	.-44     	; 0xbde <__ultoa_invert+0x58>
 c0a:	b4 e0       	ldi	r27, 0x04	; 4
 c0c:	a6 95       	lsr	r26
 c0e:	97 95       	ror	r25
 c10:	87 95       	ror	r24
 c12:	77 95       	ror	r23
 c14:	67 95       	ror	r22
 c16:	ba 95       	dec	r27
 c18:	c9 f7       	brne	.-14     	; 0xc0c <__ultoa_invert+0x86>
 c1a:	00 97       	sbiw	r24, 0x00	; 0
 c1c:	61 05       	cpc	r22, r1
 c1e:	71 05       	cpc	r23, r1
 c20:	08 95       	ret
 c22:	9b 01       	movw	r18, r22
 c24:	ac 01       	movw	r20, r24
 c26:	0a 2e       	mov	r0, r26
 c28:	06 94       	lsr	r0
 c2a:	57 95       	ror	r21
 c2c:	47 95       	ror	r20
 c2e:	37 95       	ror	r19
 c30:	27 95       	ror	r18
 c32:	ba 95       	dec	r27
 c34:	c9 f7       	brne	.-14     	; 0xc28 <__ultoa_invert+0xa2>
 c36:	62 0f       	add	r22, r18
 c38:	73 1f       	adc	r23, r19
 c3a:	84 1f       	adc	r24, r20
 c3c:	95 1f       	adc	r25, r21
 c3e:	a0 1d       	adc	r26, r0
 c40:	08 95       	ret

00000c42 <__prologue_saves__>:
 c42:	2f 92       	push	r2
 c44:	3f 92       	push	r3
 c46:	4f 92       	push	r4
 c48:	5f 92       	push	r5
 c4a:	6f 92       	push	r6
 c4c:	7f 92       	push	r7
 c4e:	8f 92       	push	r8
 c50:	9f 92       	push	r9
 c52:	af 92       	push	r10
 c54:	bf 92       	push	r11
 c56:	cf 92       	push	r12
 c58:	df 92       	push	r13
 c5a:	ef 92       	push	r14
 c5c:	ff 92       	push	r15
 c5e:	0f 93       	push	r16
 c60:	1f 93       	push	r17
 c62:	cf 93       	push	r28
 c64:	df 93       	push	r29
 c66:	cd b7       	in	r28, 0x3d	; 61
 c68:	de b7       	in	r29, 0x3e	; 62
 c6a:	ca 1b       	sub	r28, r26
 c6c:	db 0b       	sbc	r29, r27
 c6e:	0f b6       	in	r0, 0x3f	; 63
 c70:	f8 94       	cli
 c72:	de bf       	out	0x3e, r29	; 62
 c74:	0f be       	out	0x3f, r0	; 63
 c76:	cd bf       	out	0x3d, r28	; 61
 c78:	09 94       	ijmp

00000c7a <__epilogue_restores__>:
 c7a:	2a 88       	ldd	r2, Y+18	; 0x12
 c7c:	39 88       	ldd	r3, Y+17	; 0x11
 c7e:	48 88       	ldd	r4, Y+16	; 0x10
 c80:	5f 84       	ldd	r5, Y+15	; 0x0f
 c82:	6e 84       	ldd	r6, Y+14	; 0x0e
 c84:	7d 84       	ldd	r7, Y+13	; 0x0d
 c86:	8c 84       	ldd	r8, Y+12	; 0x0c
 c88:	9b 84       	ldd	r9, Y+11	; 0x0b
 c8a:	aa 84       	ldd	r10, Y+10	; 0x0a
 c8c:	b9 84       	ldd	r11, Y+9	; 0x09
 c8e:	c8 84       	ldd	r12, Y+8	; 0x08
 c90:	df 80       	ldd	r13, Y+7	; 0x07
 c92:	ee 80       	ldd	r14, Y+6	; 0x06
 c94:	fd 80       	ldd	r15, Y+5	; 0x05
 c96:	0c 81       	ldd	r16, Y+4	; 0x04
 c98:	1b 81       	ldd	r17, Y+3	; 0x03
 c9a:	aa 81       	ldd	r26, Y+2	; 0x02
 c9c:	b9 81       	ldd	r27, Y+1	; 0x01
 c9e:	ce 0f       	add	r28, r30
 ca0:	d1 1d       	adc	r29, r1
 ca2:	0f b6       	in	r0, 0x3f	; 63
 ca4:	f8 94       	cli
 ca6:	de bf       	out	0x3e, r29	; 62
 ca8:	0f be       	out	0x3f, r0	; 63
 caa:	cd bf       	out	0x3d, r28	; 61
 cac:	ed 01       	movw	r28, r26
 cae:	08 95       	ret

00000cb0 <_exit>:
 cb0:	f8 94       	cli

00000cb2 <__stop_program>:
 cb2:	ff cf       	rjmp	.-2      	; 0xcb2 <__stop_program>
