
lab8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00000af4  00000b88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000af4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080012a  0080012a  00000bb2  2**0
                  ALLOC
  3 .stab         00000d20  00000000  00000000  00000bb4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e25  00000000  00000000  000018d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000007d  00000000  00000000  000026f9  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002778  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000038  00000000  00000000  000027b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000002f3  00000000  00000000  000027f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000001a4  00000000  00000000  00002ae3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000135  00000000  00000000  00002c87  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  0000009c  00000000  00000000  00002dbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000019f  00000000  00000000  00002e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000002e1  00000000  00000000  00002ff7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000028  00000000  00000000  000032d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e4 ef       	ldi	r30, 0xF4	; 244
  90:	fa e0       	ldi	r31, 0x0A	; 10
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	aa 32       	cpi	r26, 0x2A	; 42
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	aa e2       	ldi	r26, 0x2A	; 42
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a1 33       	cpi	r26, 0x31	; 49
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 ed 00 	call	0x1da	; 0x1da <main>
  b2:	0c 94 78 05 	jmp	0xaf0	; 0xaf0 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <getkey>:
	}

}


signed char getkey(void) {
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
	int i;
	int k;
	int mask = 0x10;
  be:	e0 e1       	ldi	r30, 0x10	; 16
  c0:	f0 e0       	ldi	r31, 0x00	; 0
	int mask2 = 0x01;
	
	for (i = 0; i < 4; i++) {
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
		
		mask <<= 1;
		
		int mask2 = 0x01;
		for (k = 0; k < 4; k++) {
			if (PINA & mask2) {
  c6:	d1 e0       	ldi	r29, 0x01	; 1
  c8:	c0 e0       	ldi	r28, 0x00	; 0
  ca:	b2 e0       	ldi	r27, 0x02	; 2
  cc:	a0 e0       	ldi	r26, 0x00	; 0
	int k;
	int mask = 0x10;
	int mask2 = 0x01;
	
	for (i = 0; i < 4; i++) {
		DDRA = mask;
  ce:	e1 b9       	out	0x01, r30	; 1
		PORTA = mask;
  d0:	e2 b9       	out	0x02, r30	; 2
		
		mask <<= 1;
  d2:	ee 0f       	add	r30, r30
  d4:	ff 1f       	adc	r31, r31
		
		int mask2 = 0x01;
		for (k = 0; k < 4; k++) {
			if (PINA & mask2) {
  d6:	00 99       	sbic	0x00, 0	; 0
  d8:	0b c0       	rjmp	.+22     	; 0xf0 <getkey+0x36>
  da:	4d 2f       	mov	r20, r29
  dc:	5c 2f       	mov	r21, r28
  de:	6b 2f       	mov	r22, r27
  e0:	7a 2f       	mov	r23, r26
  e2:	20 b1       	in	r18, 0x00	; 0
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	26 23       	and	r18, r22
  e8:	37 23       	and	r19, r23
  ea:	23 2b       	or	r18, r19
  ec:	39 f0       	breq	.+14     	; 0xfc <getkey+0x42>
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <getkey+0x3a>
		PORTA = mask;
		
		mask <<= 1;
		
		int mask2 = 0x01;
		for (k = 0; k < 4; k++) {
  f0:	40 e0       	ldi	r20, 0x00	; 0
  f2:	50 e0       	ldi	r21, 0x00	; 0
			if (PINA & mask2) {
				return (4 * i + k);
  f4:	88 0f       	add	r24, r24
  f6:	88 0f       	add	r24, r24
  f8:	84 0f       	add	r24, r20
  fa:	0c c0       	rjmp	.+24     	; 0x114 <getkey+0x5a>
			}
			mask2 <<= 1;
  fc:	66 0f       	add	r22, r22
  fe:	77 1f       	adc	r23, r23
		PORTA = mask;
		
		mask <<= 1;
		
		int mask2 = 0x01;
		for (k = 0; k < 4; k++) {
 100:	4f 5f       	subi	r20, 0xFF	; 255
 102:	5f 4f       	sbci	r21, 0xFF	; 255
 104:	44 30       	cpi	r20, 0x04	; 4
 106:	51 05       	cpc	r21, r1
 108:	61 f7       	brne	.-40     	; 0xe2 <getkey+0x28>
	int i;
	int k;
	int mask = 0x10;
	int mask2 = 0x01;
	
	for (i = 0; i < 4; i++) {
 10a:	01 96       	adiw	r24, 0x01	; 1
 10c:	84 30       	cpi	r24, 0x04	; 4
 10e:	91 05       	cpc	r25, r1
 110:	f1 f6       	brne	.-68     	; 0xce <getkey+0x14>
				return (4 * i + k);
			}
			mask2 <<= 1;
		}
	}
	return (-1);
 112:	8f ef       	ldi	r24, 0xFF	; 255
	
}
 114:	df 91       	pop	r29
 116:	cf 91       	pop	r28
 118:	08 95       	ret

0000011a <mapkey>:
	//                   0  1  2  3
	//                PORTA Input Bits



	signed char mapkey(signed char key) {
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	cd b7       	in	r28, 0x3d	; 61
 120:	de b7       	in	r29, 0x3e	; 62
 122:	60 97       	sbiw	r28, 0x10	; 16
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	f8 94       	cli
 128:	de bf       	out	0x3e, r29	; 62
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	cd bf       	out	0x3d, r28	; 61
			if (key > 15 || key < 0) {
 12e:	80 31       	cpi	r24, 0x10	; 16
 130:	98 f4       	brcc	.+38     	; 0x158 <mapkey+0x3e>
				return (-1);
			}
			else {
				unsigned char map[] = {1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 9, 12, '*', 0, '#', 13};
 132:	90 e1       	ldi	r25, 0x10	; 16
 134:	ee e0       	ldi	r30, 0x0E	; 14
 136:	f1 e0       	ldi	r31, 0x01	; 1
 138:	de 01       	movw	r26, r28
 13a:	11 96       	adiw	r26, 0x01	; 1
 13c:	01 90       	ld	r0, Z+
 13e:	0d 92       	st	X+, r0
 140:	9a 95       	dec	r25
 142:	e1 f7       	brne	.-8      	; 0x13c <mapkey+0x22>
				return map[key];
 144:	e1 e0       	ldi	r30, 0x01	; 1
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	ec 0f       	add	r30, r28
 14a:	fd 1f       	adc	r31, r29
 14c:	e8 0f       	add	r30, r24
 14e:	f1 1d       	adc	r31, r1
 150:	87 fd       	sbrc	r24, 7
 152:	fa 95       	dec	r31
 154:	80 81       	ld	r24, Z
 156:	01 c0       	rjmp	.+2      	; 0x15a <mapkey+0x40>



	signed char mapkey(signed char key) {
			if (key > 15 || key < 0) {
				return (-1);
 158:	8f ef       	ldi	r24, 0xFF	; 255
			}
			else {
				unsigned char map[] = {1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 9, 12, '*', 0, '#', 13};
				return map[key];
			}
		}
 15a:	60 96       	adiw	r28, 0x10	; 16
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	f8 94       	cli
 160:	de bf       	out	0x3e, r29	; 62
 162:	0f be       	out	0x3f, r0	; 63
 164:	cd bf       	out	0x3d, r28	; 61
 166:	df 91       	pop	r29
 168:	cf 91       	pop	r28
 16a:	08 95       	ret

0000016c <getnum>:
		//                   0  1  2  3
		//                PORTA Input Bits



		signed int getnum(void) {
 16c:	0f 93       	push	r16
 16e:	1f 93       	push	r17
 170:	cf 93       	push	r28
 172:	df 93       	push	r29
			int result = 0;
 174:	c0 e0       	ldi	r28, 0x00	; 0
 176:	d0 e0       	ldi	r29, 0x00	; 0
				
				if (key >= 0 && key <= 9) {
					result = result * 10 + key;
				}
				else if (key == '*') {
					result /= 10;
 178:	0a e0       	ldi	r16, 0x0A	; 10
 17a:	10 e0       	ldi	r17, 0x00	; 0

		signed int getnum(void) {
			int result = 0;
			char key;
			while (1) {
				while (getkey() != -1) {}
 17c:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 180:	8f 3f       	cpi	r24, 0xFF	; 255
 182:	e1 f7       	brne	.-8      	; 0x17c <getnum+0x10>
				while ((key = mapkey(getkey())) == -1) {}
 184:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 188:	0e 94 8d 00 	call	0x11a	; 0x11a <mapkey>
				
				if (key >= 0 && key <= 9) {
 18c:	8a 30       	cpi	r24, 0x0A	; 10
 18e:	70 f4       	brcc	.+28     	; 0x1ac <getnum+0x40>
					result = result * 10 + key;
 190:	9e 01       	movw	r18, r28
 192:	22 0f       	add	r18, r18
 194:	33 1f       	adc	r19, r19
 196:	cc 0f       	add	r28, r28
 198:	dd 1f       	adc	r29, r29
 19a:	cc 0f       	add	r28, r28
 19c:	dd 1f       	adc	r29, r29
 19e:	cc 0f       	add	r28, r28
 1a0:	dd 1f       	adc	r29, r29
 1a2:	c2 0f       	add	r28, r18
 1a4:	d3 1f       	adc	r29, r19
 1a6:	c8 0f       	add	r28, r24
 1a8:	d1 1d       	adc	r29, r1
 1aa:	e8 cf       	rjmp	.-48     	; 0x17c <getnum+0x10>
				}
				else if (key == '*') {
 1ac:	8a 32       	cpi	r24, 0x2A	; 42
 1ae:	31 f4       	brne	.+12     	; 0x1bc <getnum+0x50>
					result /= 10;
 1b0:	ce 01       	movw	r24, r28
 1b2:	b8 01       	movw	r22, r16
 1b4:	0e 94 85 02 	call	0x50a	; 0x50a <__divmodhi4>
 1b8:	eb 01       	movw	r28, r22
 1ba:	e0 cf       	rjmp	.-64     	; 0x17c <getnum+0x10>
				}
				else if (key == '#') {
 1bc:	83 32       	cpi	r24, 0x23	; 35
 1be:	39 f0       	breq	.+14     	; 0x1ce <getnum+0x62>
					return result;
				}
				else if(key == 'A'){
 1c0:	81 34       	cpi	r24, 0x41	; 65
 1c2:	e1 f6       	brne	.-72     	; 0x17c <getnum+0x10>
					result = result * -1;
 1c4:	88 27       	eor	r24, r24
 1c6:	99 27       	eor	r25, r25
 1c8:	8c 1b       	sub	r24, r28
 1ca:	9d 0b       	sbc	r25, r29
					return result;
 1cc:	01 c0       	rjmp	.+2      	; 0x1d0 <getnum+0x64>
 1ce:	ce 01       	movw	r24, r28
				}
			}
		}
 1d0:	df 91       	pop	r29
 1d2:	cf 91       	pop	r28
 1d4:	1f 91       	pop	r17
 1d6:	0f 91       	pop	r16
 1d8:	08 95       	ret

000001da <main>:
	//	DDRA = 0xF0; // While running the lower 4 bits of PORTA will be inputs and the
	// upper 4 bits will be outputs, but we'll make them outputs one at
	// a time, so we'll actually control the data direction in getkey(),
	// the keypad scanning routine.

	lcd_init();		// Init the LCD display
 1da:	0e 94 95 01 	call	0x32a	; 0x32a <lcd_init>
	stdout=&lcd_stdout;
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	91 e0       	ldi	r25, 0x01	; 1
 1e2:	90 93 2e 01 	sts	0x012E, r25
 1e6:	80 93 2d 01 	sts	0x012D, r24

	// Main code goes here
	while(1){
	x = getnum();
	printf("%d -> 0x%x\n", x, x);
 1ea:	ce e1       	ldi	r28, 0x1E	; 30
 1ec:	d1 e0       	ldi	r29, 0x01	; 1
	lcd_init();		// Init the LCD display
	stdout=&lcd_stdout;

	// Main code goes here
	while(1){
	x = getnum();
 1ee:	0e 94 b6 00 	call	0x16c	; 0x16c <getnum>
	printf("%d -> 0x%x\n", x, x);
 1f2:	28 2f       	mov	r18, r24
 1f4:	08 2e       	mov	r0, r24
 1f6:	00 0c       	add	r0, r0
 1f8:	33 0b       	sbc	r19, r19
 1fa:	3f 93       	push	r19
 1fc:	8f 93       	push	r24
 1fe:	3f 93       	push	r19
 200:	8f 93       	push	r24
 202:	df 93       	push	r29
 204:	cf 93       	push	r28
 206:	0e 94 ad 02 	call	0x55a	; 0x55a <printf>
	}
 20a:	0f 90       	pop	r0
 20c:	0f 90       	pop	r0
 20e:	0f 90       	pop	r0
 210:	0f 90       	pop	r0
 212:	0f 90       	pop	r0
 214:	0f 90       	pop	r0
 216:	eb cf       	rjmp	.-42     	; 0x1ee <main+0x14>

00000218 <lcd_clk>:
 218:	47 9a       	sbi	0x08, 7	; 8
 21a:	85 e0       	ldi	r24, 0x05	; 5
 21c:	8a 95       	dec	r24
 21e:	f1 f7       	brne	.-4      	; 0x21c <lcd_clk+0x4>
 220:	00 00       	nop
 222:	47 98       	cbi	0x08, 7	; 8
 224:	85 e0       	ldi	r24, 0x05	; 5
 226:	8a 95       	dec	r24
 228:	f1 f7       	brne	.-4      	; 0x226 <lcd_clk+0xe>
 22a:	00 00       	nop
 22c:	08 95       	ret

0000022e <lcd_busy_wait>:
 22e:	84 b1       	in	r24, 0x04	; 4
 230:	80 7f       	andi	r24, 0xF0	; 240
 232:	84 b9       	out	0x04, r24	; 4
 234:	95 b1       	in	r25, 0x05	; 5
 236:	29 2f       	mov	r18, r25
 238:	20 71       	andi	r18, 0x10	; 16
 23a:	2c 98       	cbi	0x05, 4	; 5
 23c:	46 9a       	sbi	0x08, 6	; 8
 23e:	47 9a       	sbi	0x08, 7	; 8
 240:	85 e0       	ldi	r24, 0x05	; 5
 242:	8a 95       	dec	r24
 244:	f1 f7       	brne	.-4      	; 0x242 <lcd_busy_wait+0x14>
 246:	00 00       	nop
 248:	93 b1       	in	r25, 0x03	; 3
 24a:	47 98       	cbi	0x08, 7	; 8
 24c:	85 e0       	ldi	r24, 0x05	; 5
 24e:	8a 95       	dec	r24
 250:	f1 f7       	brne	.-4      	; 0x24e <lcd_busy_wait+0x20>
 252:	00 00       	nop
 254:	47 9a       	sbi	0x08, 7	; 8
 256:	85 e0       	ldi	r24, 0x05	; 5
 258:	8a 95       	dec	r24
 25a:	f1 f7       	brne	.-4      	; 0x258 <lcd_busy_wait+0x2a>
 25c:	00 00       	nop
 25e:	83 b1       	in	r24, 0x03	; 3
 260:	92 95       	swap	r25
 262:	90 7f       	andi	r25, 0xF0	; 240
 264:	8f 70       	andi	r24, 0x0F	; 15
 266:	89 2b       	or	r24, r25
 268:	47 98       	cbi	0x08, 7	; 8
 26a:	95 e0       	ldi	r25, 0x05	; 5
 26c:	9a 95       	dec	r25
 26e:	f1 f7       	brne	.-4      	; 0x26c <lcd_busy_wait+0x3e>
 270:	00 00       	nop
 272:	87 fd       	sbrc	r24, 7
 274:	e4 cf       	rjmp	.-56     	; 0x23e <lcd_busy_wait+0x10>
 276:	46 98       	cbi	0x08, 6	; 8
 278:	95 b1       	in	r25, 0x05	; 5
 27a:	9f 7e       	andi	r25, 0xEF	; 239
 27c:	92 2b       	or	r25, r18
 27e:	95 b9       	out	0x05, r25	; 5
 280:	94 b1       	in	r25, 0x04	; 4
 282:	9f 60       	ori	r25, 0x0F	; 15
 284:	94 b9       	out	0x04, r25	; 4
 286:	08 95       	ret

00000288 <lcd_dread>:
 288:	0e 94 17 01 	call	0x22e	; 0x22e <lcd_busy_wait>
 28c:	84 b1       	in	r24, 0x04	; 4
 28e:	80 7f       	andi	r24, 0xF0	; 240
 290:	84 b9       	out	0x04, r24	; 4
 292:	46 9a       	sbi	0x08, 6	; 8
 294:	47 9a       	sbi	0x08, 7	; 8
 296:	85 e0       	ldi	r24, 0x05	; 5
 298:	8a 95       	dec	r24
 29a:	f1 f7       	brne	.-4      	; 0x298 <lcd_dread+0x10>
 29c:	00 00       	nop
 29e:	23 b1       	in	r18, 0x03	; 3
 2a0:	47 98       	cbi	0x08, 7	; 8
 2a2:	85 e0       	ldi	r24, 0x05	; 5
 2a4:	8a 95       	dec	r24
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <lcd_dread+0x1c>
 2a8:	00 00       	nop
 2aa:	47 9a       	sbi	0x08, 7	; 8
 2ac:	85 e0       	ldi	r24, 0x05	; 5
 2ae:	8a 95       	dec	r24
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <lcd_dread+0x26>
 2b2:	00 00       	nop
 2b4:	93 b1       	in	r25, 0x03	; 3
 2b6:	22 95       	swap	r18
 2b8:	20 7f       	andi	r18, 0xF0	; 240
 2ba:	89 2f       	mov	r24, r25
 2bc:	8f 70       	andi	r24, 0x0F	; 15
 2be:	47 98       	cbi	0x08, 7	; 8
 2c0:	46 98       	cbi	0x08, 6	; 8
 2c2:	94 b1       	in	r25, 0x04	; 4
 2c4:	9f 60       	ori	r25, 0x0F	; 15
 2c6:	94 b9       	out	0x04, r25	; 4
 2c8:	82 2b       	or	r24, r18
 2ca:	08 95       	ret

000002cc <lcd_dwrite>:
 2cc:	cf 93       	push	r28
 2ce:	c8 2f       	mov	r28, r24
 2d0:	0e 94 17 01 	call	0x22e	; 0x22e <lcd_busy_wait>
 2d4:	95 b1       	in	r25, 0x05	; 5
 2d6:	8c 2f       	mov	r24, r28
 2d8:	82 95       	swap	r24
 2da:	8f 70       	andi	r24, 0x0F	; 15
 2dc:	90 7f       	andi	r25, 0xF0	; 240
 2de:	98 2b       	or	r25, r24
 2e0:	95 b9       	out	0x05, r25	; 5
 2e2:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_clk>
 2e6:	95 b1       	in	r25, 0x05	; 5
 2e8:	8c 2f       	mov	r24, r28
 2ea:	8f 70       	andi	r24, 0x0F	; 15
 2ec:	90 7f       	andi	r25, 0xF0	; 240
 2ee:	89 2b       	or	r24, r25
 2f0:	85 b9       	out	0x05, r24	; 5
 2f2:	cf 91       	pop	r28
 2f4:	0c 94 0c 01 	jmp	0x218	; 0x218 <lcd_clk>

000002f8 <lcd_iwrite>:
 2f8:	cf 93       	push	r28
 2fa:	c8 2f       	mov	r28, r24
 2fc:	2c 98       	cbi	0x05, 4	; 5
 2fe:	0e 94 17 01 	call	0x22e	; 0x22e <lcd_busy_wait>
 302:	95 b1       	in	r25, 0x05	; 5
 304:	8c 2f       	mov	r24, r28
 306:	82 95       	swap	r24
 308:	8f 70       	andi	r24, 0x0F	; 15
 30a:	90 7f       	andi	r25, 0xF0	; 240
 30c:	98 2b       	or	r25, r24
 30e:	95 b9       	out	0x05, r25	; 5
 310:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_clk>
 314:	95 b1       	in	r25, 0x05	; 5
 316:	8c 2f       	mov	r24, r28
 318:	8f 70       	andi	r24, 0x0F	; 15
 31a:	90 7f       	andi	r25, 0xF0	; 240
 31c:	89 2b       	or	r24, r25
 31e:	85 b9       	out	0x05, r24	; 5
 320:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_clk>
 324:	2c 9a       	sbi	0x05, 4	; 5
 326:	cf 91       	pop	r28
 328:	08 95       	ret

0000032a <lcd_init>:
 32a:	85 b1       	in	r24, 0x05	; 5
 32c:	80 7e       	andi	r24, 0xE0	; 224
 32e:	85 b9       	out	0x05, r24	; 5
 330:	2c 98       	cbi	0x05, 4	; 5
 332:	46 98       	cbi	0x08, 6	; 8
 334:	47 98       	cbi	0x08, 7	; 8
 336:	84 b1       	in	r24, 0x04	; 4
 338:	8f 61       	ori	r24, 0x1F	; 31
 33a:	84 b9       	out	0x04, r24	; 4
 33c:	87 b1       	in	r24, 0x07	; 7
 33e:	80 6c       	ori	r24, 0xC0	; 192
 340:	87 b9       	out	0x07, r24	; 7
 342:	8f e5       	ldi	r24, 0x5F	; 95
 344:	9a ee       	ldi	r25, 0xEA	; 234
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	f1 f7       	brne	.-4      	; 0x346 <lcd_init+0x1c>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <lcd_init+0x22>
 34c:	00 00       	nop
 34e:	85 b1       	in	r24, 0x05	; 5
 350:	80 7f       	andi	r24, 0xF0	; 240
 352:	83 60       	ori	r24, 0x03	; 3
 354:	85 b9       	out	0x05, r24	; 5
 356:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_clk>
 35a:	87 e0       	ldi	r24, 0x07	; 7
 35c:	90 e2       	ldi	r25, 0x20	; 32
 35e:	01 97       	sbiw	r24, 0x01	; 1
 360:	f1 f7       	brne	.-4      	; 0x35e <lcd_init+0x34>
 362:	00 c0       	rjmp	.+0      	; 0x364 <lcd_init+0x3a>
 364:	00 00       	nop
 366:	85 b1       	in	r24, 0x05	; 5
 368:	80 7f       	andi	r24, 0xF0	; 240
 36a:	83 60       	ori	r24, 0x03	; 3
 36c:	85 b9       	out	0x05, r24	; 5
 36e:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_clk>
 372:	87 ec       	ldi	r24, 0xC7	; 199
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	01 97       	sbiw	r24, 0x01	; 1
 378:	f1 f7       	brne	.-4      	; 0x376 <lcd_init+0x4c>
 37a:	00 c0       	rjmp	.+0      	; 0x37c <lcd_init+0x52>
 37c:	00 00       	nop
 37e:	85 b1       	in	r24, 0x05	; 5
 380:	80 7f       	andi	r24, 0xF0	; 240
 382:	83 60       	ori	r24, 0x03	; 3
 384:	85 b9       	out	0x05, r24	; 5
 386:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_clk>
 38a:	0e 94 17 01 	call	0x22e	; 0x22e <lcd_busy_wait>
 38e:	85 b1       	in	r24, 0x05	; 5
 390:	80 7f       	andi	r24, 0xF0	; 240
 392:	82 60       	ori	r24, 0x02	; 2
 394:	85 b9       	out	0x05, r24	; 5
 396:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_clk>
 39a:	84 e2       	ldi	r24, 0x24	; 36
 39c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 3a0:	8c e2       	ldi	r24, 0x2C	; 44
 3a2:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 3a6:	88 e0       	ldi	r24, 0x08	; 8
 3a8:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 3b2:	86 e0       	ldi	r24, 0x06	; 6
 3b4:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 3b8:	8f e0       	ldi	r24, 0x0F	; 15
 3ba:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 3be:	80 ed       	ldi	r24, 0xD0	; 208
 3c0:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 3c4:	2c 9a       	sbi	0x05, 4	; 5
 3c6:	08 95       	ret

000003c8 <lcd_putc>:
 3c8:	3f 92       	push	r3
 3ca:	4f 92       	push	r4
 3cc:	5f 92       	push	r5
 3ce:	6f 92       	push	r6
 3d0:	7f 92       	push	r7
 3d2:	8f 92       	push	r8
 3d4:	9f 92       	push	r9
 3d6:	af 92       	push	r10
 3d8:	bf 92       	push	r11
 3da:	cf 92       	push	r12
 3dc:	df 92       	push	r13
 3de:	ef 92       	push	r14
 3e0:	ff 92       	push	r15
 3e2:	0f 93       	push	r16
 3e4:	1f 93       	push	r17
 3e6:	cf 93       	push	r28
 3e8:	df 93       	push	r29
 3ea:	cd b7       	in	r28, 0x3d	; 61
 3ec:	de b7       	in	r29, 0x3e	; 62
 3ee:	e0 97       	sbiw	r28, 0x30	; 48
 3f0:	0f b6       	in	r0, 0x3f	; 63
 3f2:	f8 94       	cli
 3f4:	de bf       	out	0x3e, r29	; 62
 3f6:	0f be       	out	0x3f, r0	; 63
 3f8:	cd bf       	out	0x3d, r28	; 61
 3fa:	8a 30       	cpi	r24, 0x0A	; 10
 3fc:	09 f4       	brne	.+2      	; 0x400 <lcd_putc+0x38>
 3fe:	81 c0       	rjmp	.+258    	; 0x502 <lcd_putc+0x13a>
 400:	38 2e       	mov	r3, r24
 402:	80 91 2a 01 	lds	r24, 0x012A
 406:	81 11       	cpse	r24, r1
 408:	1d c0       	rjmp	.+58     	; 0x444 <lcd_putc+0x7c>
 40a:	83 2d       	mov	r24, r3
 40c:	0e 94 66 01 	call	0x2cc	; 0x2cc <lcd_dwrite>
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	e0 96       	adiw	r28, 0x30	; 48
 416:	0f b6       	in	r0, 0x3f	; 63
 418:	f8 94       	cli
 41a:	de bf       	out	0x3e, r29	; 62
 41c:	0f be       	out	0x3f, r0	; 63
 41e:	cd bf       	out	0x3d, r28	; 61
 420:	df 91       	pop	r29
 422:	cf 91       	pop	r28
 424:	1f 91       	pop	r17
 426:	0f 91       	pop	r16
 428:	ff 90       	pop	r15
 42a:	ef 90       	pop	r14
 42c:	df 90       	pop	r13
 42e:	cf 90       	pop	r12
 430:	bf 90       	pop	r11
 432:	af 90       	pop	r10
 434:	9f 90       	pop	r9
 436:	8f 90       	pop	r8
 438:	7f 90       	pop	r7
 43a:	6f 90       	pop	r6
 43c:	5f 90       	pop	r5
 43e:	4f 90       	pop	r4
 440:	3f 90       	pop	r3
 442:	08 95       	ret
 444:	80 ec       	ldi	r24, 0xC0	; 192
 446:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 44a:	8e 01       	movw	r16, r28
 44c:	0f 5f       	subi	r16, 0xFF	; 255
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	4e 01       	movw	r8, r28
 452:	81 e1       	ldi	r24, 0x11	; 17
 454:	88 0e       	add	r8, r24
 456:	91 1c       	adc	r9, r1
 458:	78 01       	movw	r14, r16
 45a:	0e 94 44 01 	call	0x288	; 0x288 <lcd_dread>
 45e:	f7 01       	movw	r30, r14
 460:	81 93       	st	Z+, r24
 462:	7f 01       	movw	r14, r30
 464:	e8 15       	cp	r30, r8
 466:	f9 05       	cpc	r31, r9
 468:	c1 f7       	brne	.-16     	; 0x45a <lcd_putc+0x92>
 46a:	80 e9       	ldi	r24, 0x90	; 144
 46c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 470:	64 01       	movw	r12, r8
 472:	5e 01       	movw	r10, r28
 474:	f1 e2       	ldi	r31, 0x21	; 33
 476:	af 0e       	add	r10, r31
 478:	b1 1c       	adc	r11, r1
 47a:	74 01       	movw	r14, r8
 47c:	0e 94 44 01 	call	0x288	; 0x288 <lcd_dread>
 480:	f7 01       	movw	r30, r14
 482:	81 93       	st	Z+, r24
 484:	7f 01       	movw	r14, r30
 486:	ea 15       	cp	r30, r10
 488:	fb 05       	cpc	r31, r11
 48a:	c1 f7       	brne	.-16     	; 0x47c <lcd_putc+0xb4>
 48c:	80 ed       	ldi	r24, 0xD0	; 208
 48e:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 492:	75 01       	movw	r14, r10
 494:	3e 01       	movw	r6, r28
 496:	f1 e3       	ldi	r31, 0x31	; 49
 498:	6f 0e       	add	r6, r31
 49a:	71 1c       	adc	r7, r1
 49c:	25 01       	movw	r4, r10
 49e:	0e 94 44 01 	call	0x288	; 0x288 <lcd_dread>
 4a2:	f2 01       	movw	r30, r4
 4a4:	81 93       	st	Z+, r24
 4a6:	2f 01       	movw	r4, r30
 4a8:	e6 15       	cp	r30, r6
 4aa:	f7 05       	cpc	r31, r7
 4ac:	c1 f7       	brne	.-16     	; 0x49e <lcd_putc+0xd6>
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 4b4:	80 e8       	ldi	r24, 0x80	; 128
 4b6:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 4ba:	f8 01       	movw	r30, r16
 4bc:	81 91       	ld	r24, Z+
 4be:	8f 01       	movw	r16, r30
 4c0:	0e 94 66 01 	call	0x2cc	; 0x2cc <lcd_dwrite>
 4c4:	80 16       	cp	r8, r16
 4c6:	91 06       	cpc	r9, r17
 4c8:	c1 f7       	brne	.-16     	; 0x4ba <lcd_putc+0xf2>
 4ca:	80 ec       	ldi	r24, 0xC0	; 192
 4cc:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 4d0:	f6 01       	movw	r30, r12
 4d2:	81 91       	ld	r24, Z+
 4d4:	6f 01       	movw	r12, r30
 4d6:	0e 94 66 01 	call	0x2cc	; 0x2cc <lcd_dwrite>
 4da:	ac 14       	cp	r10, r12
 4dc:	bd 04       	cpc	r11, r13
 4de:	c1 f7       	brne	.-16     	; 0x4d0 <lcd_putc+0x108>
 4e0:	80 e9       	ldi	r24, 0x90	; 144
 4e2:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 4e6:	f7 01       	movw	r30, r14
 4e8:	81 91       	ld	r24, Z+
 4ea:	7f 01       	movw	r14, r30
 4ec:	0e 94 66 01 	call	0x2cc	; 0x2cc <lcd_dwrite>
 4f0:	6e 14       	cp	r6, r14
 4f2:	7f 04       	cpc	r7, r15
 4f4:	c1 f7       	brne	.-16     	; 0x4e6 <lcd_putc+0x11e>
 4f6:	80 ed       	ldi	r24, 0xD0	; 208
 4f8:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_iwrite>
 4fc:	10 92 2a 01 	sts	0x012A, r1
 500:	84 cf       	rjmp	.-248    	; 0x40a <lcd_putc+0x42>
 502:	81 e0       	ldi	r24, 0x01	; 1
 504:	80 93 2a 01 	sts	0x012A, r24
 508:	83 cf       	rjmp	.-250    	; 0x410 <lcd_putc+0x48>

0000050a <__divmodhi4>:
 50a:	97 fb       	bst	r25, 7
 50c:	07 2e       	mov	r0, r23
 50e:	16 f4       	brtc	.+4      	; 0x514 <__divmodhi4+0xa>
 510:	00 94       	com	r0
 512:	07 d0       	rcall	.+14     	; 0x522 <__divmodhi4_neg1>
 514:	77 fd       	sbrc	r23, 7
 516:	09 d0       	rcall	.+18     	; 0x52a <__divmodhi4_neg2>
 518:	0e 94 99 02 	call	0x532	; 0x532 <__udivmodhi4>
 51c:	07 fc       	sbrc	r0, 7
 51e:	05 d0       	rcall	.+10     	; 0x52a <__divmodhi4_neg2>
 520:	3e f4       	brtc	.+14     	; 0x530 <__divmodhi4_exit>

00000522 <__divmodhi4_neg1>:
 522:	90 95       	com	r25
 524:	81 95       	neg	r24
 526:	9f 4f       	sbci	r25, 0xFF	; 255
 528:	08 95       	ret

0000052a <__divmodhi4_neg2>:
 52a:	70 95       	com	r23
 52c:	61 95       	neg	r22
 52e:	7f 4f       	sbci	r23, 0xFF	; 255

00000530 <__divmodhi4_exit>:
 530:	08 95       	ret

00000532 <__udivmodhi4>:
 532:	aa 1b       	sub	r26, r26
 534:	bb 1b       	sub	r27, r27
 536:	51 e1       	ldi	r21, 0x11	; 17
 538:	07 c0       	rjmp	.+14     	; 0x548 <__udivmodhi4_ep>

0000053a <__udivmodhi4_loop>:
 53a:	aa 1f       	adc	r26, r26
 53c:	bb 1f       	adc	r27, r27
 53e:	a6 17       	cp	r26, r22
 540:	b7 07       	cpc	r27, r23
 542:	10 f0       	brcs	.+4      	; 0x548 <__udivmodhi4_ep>
 544:	a6 1b       	sub	r26, r22
 546:	b7 0b       	sbc	r27, r23

00000548 <__udivmodhi4_ep>:
 548:	88 1f       	adc	r24, r24
 54a:	99 1f       	adc	r25, r25
 54c:	5a 95       	dec	r21
 54e:	a9 f7       	brne	.-22     	; 0x53a <__udivmodhi4_loop>
 550:	80 95       	com	r24
 552:	90 95       	com	r25
 554:	bc 01       	movw	r22, r24
 556:	cd 01       	movw	r24, r26
 558:	08 95       	ret

0000055a <printf>:
 55a:	a0 e0       	ldi	r26, 0x00	; 0
 55c:	b0 e0       	ldi	r27, 0x00	; 0
 55e:	e3 eb       	ldi	r30, 0xB3	; 179
 560:	f2 e0       	ldi	r31, 0x02	; 2
 562:	0c 94 51 05 	jmp	0xaa2	; 0xaa2 <__prologue_saves__+0x20>
 566:	ae 01       	movw	r20, r28
 568:	4b 5f       	subi	r20, 0xFB	; 251
 56a:	5f 4f       	sbci	r21, 0xFF	; 255
 56c:	fa 01       	movw	r30, r20
 56e:	61 91       	ld	r22, Z+
 570:	71 91       	ld	r23, Z+
 572:	af 01       	movw	r20, r30
 574:	80 91 2d 01 	lds	r24, 0x012D
 578:	90 91 2e 01 	lds	r25, 0x012E
 57c:	0e 94 c3 02 	call	0x586	; 0x586 <vfprintf>
 580:	e2 e0       	ldi	r30, 0x02	; 2
 582:	0c 94 6d 05 	jmp	0xada	; 0xada <__epilogue_restores__+0x20>

00000586 <vfprintf>:
 586:	ac e0       	ldi	r26, 0x0C	; 12
 588:	b0 e0       	ldi	r27, 0x00	; 0
 58a:	e9 ec       	ldi	r30, 0xC9	; 201
 58c:	f2 e0       	ldi	r31, 0x02	; 2
 58e:	0c 94 41 05 	jmp	0xa82	; 0xa82 <__prologue_saves__>
 592:	7c 01       	movw	r14, r24
 594:	6b 01       	movw	r12, r22
 596:	8a 01       	movw	r16, r20
 598:	fc 01       	movw	r30, r24
 59a:	17 82       	std	Z+7, r1	; 0x07
 59c:	16 82       	std	Z+6, r1	; 0x06
 59e:	83 81       	ldd	r24, Z+3	; 0x03
 5a0:	81 ff       	sbrs	r24, 1
 5a2:	bd c1       	rjmp	.+890    	; 0x91e <__stack+0x1f>
 5a4:	ce 01       	movw	r24, r28
 5a6:	01 96       	adiw	r24, 0x01	; 1
 5a8:	4c 01       	movw	r8, r24
 5aa:	f7 01       	movw	r30, r14
 5ac:	93 81       	ldd	r25, Z+3	; 0x03
 5ae:	f6 01       	movw	r30, r12
 5b0:	93 fd       	sbrc	r25, 3
 5b2:	85 91       	lpm	r24, Z+
 5b4:	93 ff       	sbrs	r25, 3
 5b6:	81 91       	ld	r24, Z+
 5b8:	6f 01       	movw	r12, r30
 5ba:	88 23       	and	r24, r24
 5bc:	09 f4       	brne	.+2      	; 0x5c0 <vfprintf+0x3a>
 5be:	ab c1       	rjmp	.+854    	; 0x916 <__stack+0x17>
 5c0:	85 32       	cpi	r24, 0x25	; 37
 5c2:	39 f4       	brne	.+14     	; 0x5d2 <vfprintf+0x4c>
 5c4:	93 fd       	sbrc	r25, 3
 5c6:	85 91       	lpm	r24, Z+
 5c8:	93 ff       	sbrs	r25, 3
 5ca:	81 91       	ld	r24, Z+
 5cc:	6f 01       	movw	r12, r30
 5ce:	85 32       	cpi	r24, 0x25	; 37
 5d0:	29 f4       	brne	.+10     	; 0x5dc <vfprintf+0x56>
 5d2:	b7 01       	movw	r22, r14
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	0e 94 ab 04 	call	0x956	; 0x956 <fputc>
 5da:	e7 cf       	rjmp	.-50     	; 0x5aa <vfprintf+0x24>
 5dc:	51 2c       	mov	r5, r1
 5de:	31 2c       	mov	r3, r1
 5e0:	20 e0       	ldi	r18, 0x00	; 0
 5e2:	20 32       	cpi	r18, 0x20	; 32
 5e4:	a0 f4       	brcc	.+40     	; 0x60e <vfprintf+0x88>
 5e6:	8b 32       	cpi	r24, 0x2B	; 43
 5e8:	69 f0       	breq	.+26     	; 0x604 <vfprintf+0x7e>
 5ea:	30 f4       	brcc	.+12     	; 0x5f8 <vfprintf+0x72>
 5ec:	80 32       	cpi	r24, 0x20	; 32
 5ee:	59 f0       	breq	.+22     	; 0x606 <vfprintf+0x80>
 5f0:	83 32       	cpi	r24, 0x23	; 35
 5f2:	69 f4       	brne	.+26     	; 0x60e <vfprintf+0x88>
 5f4:	20 61       	ori	r18, 0x10	; 16
 5f6:	2c c0       	rjmp	.+88     	; 0x650 <vfprintf+0xca>
 5f8:	8d 32       	cpi	r24, 0x2D	; 45
 5fa:	39 f0       	breq	.+14     	; 0x60a <vfprintf+0x84>
 5fc:	80 33       	cpi	r24, 0x30	; 48
 5fe:	39 f4       	brne	.+14     	; 0x60e <vfprintf+0x88>
 600:	21 60       	ori	r18, 0x01	; 1
 602:	26 c0       	rjmp	.+76     	; 0x650 <vfprintf+0xca>
 604:	22 60       	ori	r18, 0x02	; 2
 606:	24 60       	ori	r18, 0x04	; 4
 608:	23 c0       	rjmp	.+70     	; 0x650 <vfprintf+0xca>
 60a:	28 60       	ori	r18, 0x08	; 8
 60c:	21 c0       	rjmp	.+66     	; 0x650 <vfprintf+0xca>
 60e:	27 fd       	sbrc	r18, 7
 610:	27 c0       	rjmp	.+78     	; 0x660 <vfprintf+0xda>
 612:	30 ed       	ldi	r19, 0xD0	; 208
 614:	38 0f       	add	r19, r24
 616:	3a 30       	cpi	r19, 0x0A	; 10
 618:	78 f4       	brcc	.+30     	; 0x638 <vfprintf+0xb2>
 61a:	26 ff       	sbrs	r18, 6
 61c:	06 c0       	rjmp	.+12     	; 0x62a <vfprintf+0xa4>
 61e:	fa e0       	ldi	r31, 0x0A	; 10
 620:	5f 9e       	mul	r5, r31
 622:	30 0d       	add	r19, r0
 624:	11 24       	eor	r1, r1
 626:	53 2e       	mov	r5, r19
 628:	13 c0       	rjmp	.+38     	; 0x650 <vfprintf+0xca>
 62a:	8a e0       	ldi	r24, 0x0A	; 10
 62c:	38 9e       	mul	r3, r24
 62e:	30 0d       	add	r19, r0
 630:	11 24       	eor	r1, r1
 632:	33 2e       	mov	r3, r19
 634:	20 62       	ori	r18, 0x20	; 32
 636:	0c c0       	rjmp	.+24     	; 0x650 <vfprintf+0xca>
 638:	8e 32       	cpi	r24, 0x2E	; 46
 63a:	21 f4       	brne	.+8      	; 0x644 <vfprintf+0xbe>
 63c:	26 fd       	sbrc	r18, 6
 63e:	6b c1       	rjmp	.+726    	; 0x916 <__stack+0x17>
 640:	20 64       	ori	r18, 0x40	; 64
 642:	06 c0       	rjmp	.+12     	; 0x650 <vfprintf+0xca>
 644:	8c 36       	cpi	r24, 0x6C	; 108
 646:	11 f4       	brne	.+4      	; 0x64c <vfprintf+0xc6>
 648:	20 68       	ori	r18, 0x80	; 128
 64a:	02 c0       	rjmp	.+4      	; 0x650 <vfprintf+0xca>
 64c:	88 36       	cpi	r24, 0x68	; 104
 64e:	41 f4       	brne	.+16     	; 0x660 <vfprintf+0xda>
 650:	f6 01       	movw	r30, r12
 652:	93 fd       	sbrc	r25, 3
 654:	85 91       	lpm	r24, Z+
 656:	93 ff       	sbrs	r25, 3
 658:	81 91       	ld	r24, Z+
 65a:	6f 01       	movw	r12, r30
 65c:	81 11       	cpse	r24, r1
 65e:	c1 cf       	rjmp	.-126    	; 0x5e2 <vfprintf+0x5c>
 660:	98 2f       	mov	r25, r24
 662:	9f 7d       	andi	r25, 0xDF	; 223
 664:	95 54       	subi	r25, 0x45	; 69
 666:	93 30       	cpi	r25, 0x03	; 3
 668:	28 f4       	brcc	.+10     	; 0x674 <vfprintf+0xee>
 66a:	0c 5f       	subi	r16, 0xFC	; 252
 66c:	1f 4f       	sbci	r17, 0xFF	; 255
 66e:	ff e3       	ldi	r31, 0x3F	; 63
 670:	f9 83       	std	Y+1, r31	; 0x01
 672:	0d c0       	rjmp	.+26     	; 0x68e <vfprintf+0x108>
 674:	83 36       	cpi	r24, 0x63	; 99
 676:	31 f0       	breq	.+12     	; 0x684 <vfprintf+0xfe>
 678:	83 37       	cpi	r24, 0x73	; 115
 67a:	71 f0       	breq	.+28     	; 0x698 <vfprintf+0x112>
 67c:	83 35       	cpi	r24, 0x53	; 83
 67e:	09 f0       	breq	.+2      	; 0x682 <vfprintf+0xfc>
 680:	5b c0       	rjmp	.+182    	; 0x738 <vfprintf+0x1b2>
 682:	22 c0       	rjmp	.+68     	; 0x6c8 <vfprintf+0x142>
 684:	f8 01       	movw	r30, r16
 686:	80 81       	ld	r24, Z
 688:	89 83       	std	Y+1, r24	; 0x01
 68a:	0e 5f       	subi	r16, 0xFE	; 254
 68c:	1f 4f       	sbci	r17, 0xFF	; 255
 68e:	44 24       	eor	r4, r4
 690:	43 94       	inc	r4
 692:	51 2c       	mov	r5, r1
 694:	54 01       	movw	r10, r8
 696:	15 c0       	rjmp	.+42     	; 0x6c2 <vfprintf+0x13c>
 698:	38 01       	movw	r6, r16
 69a:	f2 e0       	ldi	r31, 0x02	; 2
 69c:	6f 0e       	add	r6, r31
 69e:	71 1c       	adc	r7, r1
 6a0:	f8 01       	movw	r30, r16
 6a2:	a0 80       	ld	r10, Z
 6a4:	b1 80       	ldd	r11, Z+1	; 0x01
 6a6:	26 ff       	sbrs	r18, 6
 6a8:	03 c0       	rjmp	.+6      	; 0x6b0 <vfprintf+0x12a>
 6aa:	65 2d       	mov	r22, r5
 6ac:	70 e0       	ldi	r23, 0x00	; 0
 6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <vfprintf+0x12e>
 6b0:	6f ef       	ldi	r22, 0xFF	; 255
 6b2:	7f ef       	ldi	r23, 0xFF	; 255
 6b4:	c5 01       	movw	r24, r10
 6b6:	2c 87       	std	Y+12, r18	; 0x0c
 6b8:	0e 94 a0 04 	call	0x940	; 0x940 <strnlen>
 6bc:	2c 01       	movw	r4, r24
 6be:	83 01       	movw	r16, r6
 6c0:	2c 85       	ldd	r18, Y+12	; 0x0c
 6c2:	2f 77       	andi	r18, 0x7F	; 127
 6c4:	22 2e       	mov	r2, r18
 6c6:	17 c0       	rjmp	.+46     	; 0x6f6 <vfprintf+0x170>
 6c8:	38 01       	movw	r6, r16
 6ca:	f2 e0       	ldi	r31, 0x02	; 2
 6cc:	6f 0e       	add	r6, r31
 6ce:	71 1c       	adc	r7, r1
 6d0:	f8 01       	movw	r30, r16
 6d2:	a0 80       	ld	r10, Z
 6d4:	b1 80       	ldd	r11, Z+1	; 0x01
 6d6:	26 ff       	sbrs	r18, 6
 6d8:	03 c0       	rjmp	.+6      	; 0x6e0 <vfprintf+0x15a>
 6da:	65 2d       	mov	r22, r5
 6dc:	70 e0       	ldi	r23, 0x00	; 0
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <vfprintf+0x15e>
 6e0:	6f ef       	ldi	r22, 0xFF	; 255
 6e2:	7f ef       	ldi	r23, 0xFF	; 255
 6e4:	c5 01       	movw	r24, r10
 6e6:	2c 87       	std	Y+12, r18	; 0x0c
 6e8:	0e 94 95 04 	call	0x92a	; 0x92a <strnlen_P>
 6ec:	2c 01       	movw	r4, r24
 6ee:	2c 85       	ldd	r18, Y+12	; 0x0c
 6f0:	20 68       	ori	r18, 0x80	; 128
 6f2:	22 2e       	mov	r2, r18
 6f4:	83 01       	movw	r16, r6
 6f6:	23 fc       	sbrc	r2, 3
 6f8:	1b c0       	rjmp	.+54     	; 0x730 <vfprintf+0x1aa>
 6fa:	83 2d       	mov	r24, r3
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	48 16       	cp	r4, r24
 700:	59 06       	cpc	r5, r25
 702:	b0 f4       	brcc	.+44     	; 0x730 <vfprintf+0x1aa>
 704:	b7 01       	movw	r22, r14
 706:	80 e2       	ldi	r24, 0x20	; 32
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	0e 94 ab 04 	call	0x956	; 0x956 <fputc>
 70e:	3a 94       	dec	r3
 710:	f4 cf       	rjmp	.-24     	; 0x6fa <vfprintf+0x174>
 712:	f5 01       	movw	r30, r10
 714:	27 fc       	sbrc	r2, 7
 716:	85 91       	lpm	r24, Z+
 718:	27 fe       	sbrs	r2, 7
 71a:	81 91       	ld	r24, Z+
 71c:	5f 01       	movw	r10, r30
 71e:	b7 01       	movw	r22, r14
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	0e 94 ab 04 	call	0x956	; 0x956 <fputc>
 726:	31 10       	cpse	r3, r1
 728:	3a 94       	dec	r3
 72a:	f1 e0       	ldi	r31, 0x01	; 1
 72c:	4f 1a       	sub	r4, r31
 72e:	51 08       	sbc	r5, r1
 730:	41 14       	cp	r4, r1
 732:	51 04       	cpc	r5, r1
 734:	71 f7       	brne	.-36     	; 0x712 <vfprintf+0x18c>
 736:	e5 c0       	rjmp	.+458    	; 0x902 <__stack+0x3>
 738:	84 36       	cpi	r24, 0x64	; 100
 73a:	11 f0       	breq	.+4      	; 0x740 <vfprintf+0x1ba>
 73c:	89 36       	cpi	r24, 0x69	; 105
 73e:	39 f5       	brne	.+78     	; 0x78e <vfprintf+0x208>
 740:	f8 01       	movw	r30, r16
 742:	27 ff       	sbrs	r18, 7
 744:	07 c0       	rjmp	.+14     	; 0x754 <vfprintf+0x1ce>
 746:	60 81       	ld	r22, Z
 748:	71 81       	ldd	r23, Z+1	; 0x01
 74a:	82 81       	ldd	r24, Z+2	; 0x02
 74c:	93 81       	ldd	r25, Z+3	; 0x03
 74e:	0c 5f       	subi	r16, 0xFC	; 252
 750:	1f 4f       	sbci	r17, 0xFF	; 255
 752:	08 c0       	rjmp	.+16     	; 0x764 <vfprintf+0x1de>
 754:	60 81       	ld	r22, Z
 756:	71 81       	ldd	r23, Z+1	; 0x01
 758:	07 2e       	mov	r0, r23
 75a:	00 0c       	add	r0, r0
 75c:	88 0b       	sbc	r24, r24
 75e:	99 0b       	sbc	r25, r25
 760:	0e 5f       	subi	r16, 0xFE	; 254
 762:	1f 4f       	sbci	r17, 0xFF	; 255
 764:	2f 76       	andi	r18, 0x6F	; 111
 766:	72 2e       	mov	r7, r18
 768:	97 ff       	sbrs	r25, 7
 76a:	09 c0       	rjmp	.+18     	; 0x77e <vfprintf+0x1f8>
 76c:	90 95       	com	r25
 76e:	80 95       	com	r24
 770:	70 95       	com	r23
 772:	61 95       	neg	r22
 774:	7f 4f       	sbci	r23, 0xFF	; 255
 776:	8f 4f       	sbci	r24, 0xFF	; 255
 778:	9f 4f       	sbci	r25, 0xFF	; 255
 77a:	20 68       	ori	r18, 0x80	; 128
 77c:	72 2e       	mov	r7, r18
 77e:	2a e0       	ldi	r18, 0x0A	; 10
 780:	30 e0       	ldi	r19, 0x00	; 0
 782:	a4 01       	movw	r20, r8
 784:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__ultoa_invert>
 788:	a8 2e       	mov	r10, r24
 78a:	a8 18       	sub	r10, r8
 78c:	44 c0       	rjmp	.+136    	; 0x816 <vfprintf+0x290>
 78e:	85 37       	cpi	r24, 0x75	; 117
 790:	29 f4       	brne	.+10     	; 0x79c <vfprintf+0x216>
 792:	2f 7e       	andi	r18, 0xEF	; 239
 794:	b2 2e       	mov	r11, r18
 796:	2a e0       	ldi	r18, 0x0A	; 10
 798:	30 e0       	ldi	r19, 0x00	; 0
 79a:	25 c0       	rjmp	.+74     	; 0x7e6 <vfprintf+0x260>
 79c:	f2 2f       	mov	r31, r18
 79e:	f9 7f       	andi	r31, 0xF9	; 249
 7a0:	bf 2e       	mov	r11, r31
 7a2:	8f 36       	cpi	r24, 0x6F	; 111
 7a4:	c1 f0       	breq	.+48     	; 0x7d6 <vfprintf+0x250>
 7a6:	18 f4       	brcc	.+6      	; 0x7ae <vfprintf+0x228>
 7a8:	88 35       	cpi	r24, 0x58	; 88
 7aa:	79 f0       	breq	.+30     	; 0x7ca <vfprintf+0x244>
 7ac:	b4 c0       	rjmp	.+360    	; 0x916 <__stack+0x17>
 7ae:	80 37       	cpi	r24, 0x70	; 112
 7b0:	19 f0       	breq	.+6      	; 0x7b8 <vfprintf+0x232>
 7b2:	88 37       	cpi	r24, 0x78	; 120
 7b4:	21 f0       	breq	.+8      	; 0x7be <vfprintf+0x238>
 7b6:	af c0       	rjmp	.+350    	; 0x916 <__stack+0x17>
 7b8:	2f 2f       	mov	r18, r31
 7ba:	20 61       	ori	r18, 0x10	; 16
 7bc:	b2 2e       	mov	r11, r18
 7be:	b4 fe       	sbrs	r11, 4
 7c0:	0d c0       	rjmp	.+26     	; 0x7dc <vfprintf+0x256>
 7c2:	8b 2d       	mov	r24, r11
 7c4:	84 60       	ori	r24, 0x04	; 4
 7c6:	b8 2e       	mov	r11, r24
 7c8:	09 c0       	rjmp	.+18     	; 0x7dc <vfprintf+0x256>
 7ca:	24 ff       	sbrs	r18, 4
 7cc:	0a c0       	rjmp	.+20     	; 0x7e2 <vfprintf+0x25c>
 7ce:	9f 2f       	mov	r25, r31
 7d0:	96 60       	ori	r25, 0x06	; 6
 7d2:	b9 2e       	mov	r11, r25
 7d4:	06 c0       	rjmp	.+12     	; 0x7e2 <vfprintf+0x25c>
 7d6:	28 e0       	ldi	r18, 0x08	; 8
 7d8:	30 e0       	ldi	r19, 0x00	; 0
 7da:	05 c0       	rjmp	.+10     	; 0x7e6 <vfprintf+0x260>
 7dc:	20 e1       	ldi	r18, 0x10	; 16
 7de:	30 e0       	ldi	r19, 0x00	; 0
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <vfprintf+0x260>
 7e2:	20 e1       	ldi	r18, 0x10	; 16
 7e4:	32 e0       	ldi	r19, 0x02	; 2
 7e6:	f8 01       	movw	r30, r16
 7e8:	b7 fe       	sbrs	r11, 7
 7ea:	07 c0       	rjmp	.+14     	; 0x7fa <vfprintf+0x274>
 7ec:	60 81       	ld	r22, Z
 7ee:	71 81       	ldd	r23, Z+1	; 0x01
 7f0:	82 81       	ldd	r24, Z+2	; 0x02
 7f2:	93 81       	ldd	r25, Z+3	; 0x03
 7f4:	0c 5f       	subi	r16, 0xFC	; 252
 7f6:	1f 4f       	sbci	r17, 0xFF	; 255
 7f8:	06 c0       	rjmp	.+12     	; 0x806 <vfprintf+0x280>
 7fa:	60 81       	ld	r22, Z
 7fc:	71 81       	ldd	r23, Z+1	; 0x01
 7fe:	80 e0       	ldi	r24, 0x00	; 0
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	0e 5f       	subi	r16, 0xFE	; 254
 804:	1f 4f       	sbci	r17, 0xFF	; 255
 806:	a4 01       	movw	r20, r8
 808:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__ultoa_invert>
 80c:	a8 2e       	mov	r10, r24
 80e:	a8 18       	sub	r10, r8
 810:	fb 2d       	mov	r31, r11
 812:	ff 77       	andi	r31, 0x7F	; 127
 814:	7f 2e       	mov	r7, r31
 816:	76 fe       	sbrs	r7, 6
 818:	0b c0       	rjmp	.+22     	; 0x830 <vfprintf+0x2aa>
 81a:	37 2d       	mov	r19, r7
 81c:	3e 7f       	andi	r19, 0xFE	; 254
 81e:	a5 14       	cp	r10, r5
 820:	50 f4       	brcc	.+20     	; 0x836 <vfprintf+0x2b0>
 822:	74 fe       	sbrs	r7, 4
 824:	0a c0       	rjmp	.+20     	; 0x83a <vfprintf+0x2b4>
 826:	72 fc       	sbrc	r7, 2
 828:	08 c0       	rjmp	.+16     	; 0x83a <vfprintf+0x2b4>
 82a:	37 2d       	mov	r19, r7
 82c:	3e 7e       	andi	r19, 0xEE	; 238
 82e:	05 c0       	rjmp	.+10     	; 0x83a <vfprintf+0x2b4>
 830:	ba 2c       	mov	r11, r10
 832:	37 2d       	mov	r19, r7
 834:	03 c0       	rjmp	.+6      	; 0x83c <vfprintf+0x2b6>
 836:	ba 2c       	mov	r11, r10
 838:	01 c0       	rjmp	.+2      	; 0x83c <vfprintf+0x2b6>
 83a:	b5 2c       	mov	r11, r5
 83c:	34 ff       	sbrs	r19, 4
 83e:	0d c0       	rjmp	.+26     	; 0x85a <vfprintf+0x2d4>
 840:	fe 01       	movw	r30, r28
 842:	ea 0d       	add	r30, r10
 844:	f1 1d       	adc	r31, r1
 846:	80 81       	ld	r24, Z
 848:	80 33       	cpi	r24, 0x30	; 48
 84a:	11 f4       	brne	.+4      	; 0x850 <vfprintf+0x2ca>
 84c:	39 7e       	andi	r19, 0xE9	; 233
 84e:	09 c0       	rjmp	.+18     	; 0x862 <vfprintf+0x2dc>
 850:	32 ff       	sbrs	r19, 2
 852:	06 c0       	rjmp	.+12     	; 0x860 <vfprintf+0x2da>
 854:	b3 94       	inc	r11
 856:	b3 94       	inc	r11
 858:	04 c0       	rjmp	.+8      	; 0x862 <vfprintf+0x2dc>
 85a:	83 2f       	mov	r24, r19
 85c:	86 78       	andi	r24, 0x86	; 134
 85e:	09 f0       	breq	.+2      	; 0x862 <vfprintf+0x2dc>
 860:	b3 94       	inc	r11
 862:	33 fd       	sbrc	r19, 3
 864:	13 c0       	rjmp	.+38     	; 0x88c <vfprintf+0x306>
 866:	30 ff       	sbrs	r19, 0
 868:	06 c0       	rjmp	.+12     	; 0x876 <vfprintf+0x2f0>
 86a:	5a 2c       	mov	r5, r10
 86c:	b3 14       	cp	r11, r3
 86e:	18 f4       	brcc	.+6      	; 0x876 <vfprintf+0x2f0>
 870:	53 0c       	add	r5, r3
 872:	5b 18       	sub	r5, r11
 874:	b3 2c       	mov	r11, r3
 876:	b3 14       	cp	r11, r3
 878:	68 f4       	brcc	.+26     	; 0x894 <vfprintf+0x30e>
 87a:	b7 01       	movw	r22, r14
 87c:	80 e2       	ldi	r24, 0x20	; 32
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	3c 87       	std	Y+12, r19	; 0x0c
 882:	0e 94 ab 04 	call	0x956	; 0x956 <fputc>
 886:	b3 94       	inc	r11
 888:	3c 85       	ldd	r19, Y+12	; 0x0c
 88a:	f5 cf       	rjmp	.-22     	; 0x876 <vfprintf+0x2f0>
 88c:	b3 14       	cp	r11, r3
 88e:	10 f4       	brcc	.+4      	; 0x894 <vfprintf+0x30e>
 890:	3b 18       	sub	r3, r11
 892:	01 c0       	rjmp	.+2      	; 0x896 <vfprintf+0x310>
 894:	31 2c       	mov	r3, r1
 896:	34 ff       	sbrs	r19, 4
 898:	12 c0       	rjmp	.+36     	; 0x8be <vfprintf+0x338>
 89a:	b7 01       	movw	r22, r14
 89c:	80 e3       	ldi	r24, 0x30	; 48
 89e:	90 e0       	ldi	r25, 0x00	; 0
 8a0:	3c 87       	std	Y+12, r19	; 0x0c
 8a2:	0e 94 ab 04 	call	0x956	; 0x956 <fputc>
 8a6:	3c 85       	ldd	r19, Y+12	; 0x0c
 8a8:	32 ff       	sbrs	r19, 2
 8aa:	17 c0       	rjmp	.+46     	; 0x8da <vfprintf+0x354>
 8ac:	31 fd       	sbrc	r19, 1
 8ae:	03 c0       	rjmp	.+6      	; 0x8b6 <vfprintf+0x330>
 8b0:	88 e7       	ldi	r24, 0x78	; 120
 8b2:	90 e0       	ldi	r25, 0x00	; 0
 8b4:	02 c0       	rjmp	.+4      	; 0x8ba <vfprintf+0x334>
 8b6:	88 e5       	ldi	r24, 0x58	; 88
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	b7 01       	movw	r22, r14
 8bc:	0c c0       	rjmp	.+24     	; 0x8d6 <vfprintf+0x350>
 8be:	83 2f       	mov	r24, r19
 8c0:	86 78       	andi	r24, 0x86	; 134
 8c2:	59 f0       	breq	.+22     	; 0x8da <vfprintf+0x354>
 8c4:	31 ff       	sbrs	r19, 1
 8c6:	02 c0       	rjmp	.+4      	; 0x8cc <vfprintf+0x346>
 8c8:	8b e2       	ldi	r24, 0x2B	; 43
 8ca:	01 c0       	rjmp	.+2      	; 0x8ce <vfprintf+0x348>
 8cc:	80 e2       	ldi	r24, 0x20	; 32
 8ce:	37 fd       	sbrc	r19, 7
 8d0:	8d e2       	ldi	r24, 0x2D	; 45
 8d2:	b7 01       	movw	r22, r14
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	0e 94 ab 04 	call	0x956	; 0x956 <fputc>
 8da:	a5 14       	cp	r10, r5
 8dc:	38 f4       	brcc	.+14     	; 0x8ec <vfprintf+0x366>
 8de:	b7 01       	movw	r22, r14
 8e0:	80 e3       	ldi	r24, 0x30	; 48
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	0e 94 ab 04 	call	0x956	; 0x956 <fputc>
 8e8:	5a 94       	dec	r5
 8ea:	f7 cf       	rjmp	.-18     	; 0x8da <vfprintf+0x354>
 8ec:	aa 94       	dec	r10
 8ee:	f4 01       	movw	r30, r8
 8f0:	ea 0d       	add	r30, r10
 8f2:	f1 1d       	adc	r31, r1
 8f4:	80 81       	ld	r24, Z
 8f6:	b7 01       	movw	r22, r14
 8f8:	90 e0       	ldi	r25, 0x00	; 0
 8fa:	0e 94 ab 04 	call	0x956	; 0x956 <fputc>
 8fe:	a1 10       	cpse	r10, r1
 900:	f5 cf       	rjmp	.-22     	; 0x8ec <vfprintf+0x366>
 902:	33 20       	and	r3, r3
 904:	09 f4       	brne	.+2      	; 0x908 <__stack+0x9>
 906:	51 ce       	rjmp	.-862    	; 0x5aa <vfprintf+0x24>
 908:	b7 01       	movw	r22, r14
 90a:	80 e2       	ldi	r24, 0x20	; 32
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	0e 94 ab 04 	call	0x956	; 0x956 <fputc>
 912:	3a 94       	dec	r3
 914:	f6 cf       	rjmp	.-20     	; 0x902 <__stack+0x3>
 916:	f7 01       	movw	r30, r14
 918:	86 81       	ldd	r24, Z+6	; 0x06
 91a:	97 81       	ldd	r25, Z+7	; 0x07
 91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0x23>
 91e:	8f ef       	ldi	r24, 0xFF	; 255
 920:	9f ef       	ldi	r25, 0xFF	; 255
 922:	2c 96       	adiw	r28, 0x0c	; 12
 924:	e2 e1       	ldi	r30, 0x12	; 18
 926:	0c 94 5d 05 	jmp	0xaba	; 0xaba <__epilogue_restores__>

0000092a <strnlen_P>:
 92a:	fc 01       	movw	r30, r24
 92c:	05 90       	lpm	r0, Z+
 92e:	61 50       	subi	r22, 0x01	; 1
 930:	70 40       	sbci	r23, 0x00	; 0
 932:	01 10       	cpse	r0, r1
 934:	d8 f7       	brcc	.-10     	; 0x92c <strnlen_P+0x2>
 936:	80 95       	com	r24
 938:	90 95       	com	r25
 93a:	8e 0f       	add	r24, r30
 93c:	9f 1f       	adc	r25, r31
 93e:	08 95       	ret

00000940 <strnlen>:
 940:	fc 01       	movw	r30, r24
 942:	61 50       	subi	r22, 0x01	; 1
 944:	70 40       	sbci	r23, 0x00	; 0
 946:	01 90       	ld	r0, Z+
 948:	01 10       	cpse	r0, r1
 94a:	d8 f7       	brcc	.-10     	; 0x942 <strnlen+0x2>
 94c:	80 95       	com	r24
 94e:	90 95       	com	r25
 950:	8e 0f       	add	r24, r30
 952:	9f 1f       	adc	r25, r31
 954:	08 95       	ret

00000956 <fputc>:
 956:	0f 93       	push	r16
 958:	1f 93       	push	r17
 95a:	cf 93       	push	r28
 95c:	df 93       	push	r29
 95e:	fb 01       	movw	r30, r22
 960:	23 81       	ldd	r18, Z+3	; 0x03
 962:	21 fd       	sbrc	r18, 1
 964:	03 c0       	rjmp	.+6      	; 0x96c <fputc+0x16>
 966:	8f ef       	ldi	r24, 0xFF	; 255
 968:	9f ef       	ldi	r25, 0xFF	; 255
 96a:	28 c0       	rjmp	.+80     	; 0x9bc <fputc+0x66>
 96c:	22 ff       	sbrs	r18, 2
 96e:	16 c0       	rjmp	.+44     	; 0x99c <fputc+0x46>
 970:	46 81       	ldd	r20, Z+6	; 0x06
 972:	57 81       	ldd	r21, Z+7	; 0x07
 974:	24 81       	ldd	r18, Z+4	; 0x04
 976:	35 81       	ldd	r19, Z+5	; 0x05
 978:	42 17       	cp	r20, r18
 97a:	53 07       	cpc	r21, r19
 97c:	44 f4       	brge	.+16     	; 0x98e <fputc+0x38>
 97e:	a0 81       	ld	r26, Z
 980:	b1 81       	ldd	r27, Z+1	; 0x01
 982:	9d 01       	movw	r18, r26
 984:	2f 5f       	subi	r18, 0xFF	; 255
 986:	3f 4f       	sbci	r19, 0xFF	; 255
 988:	31 83       	std	Z+1, r19	; 0x01
 98a:	20 83       	st	Z, r18
 98c:	8c 93       	st	X, r24
 98e:	26 81       	ldd	r18, Z+6	; 0x06
 990:	37 81       	ldd	r19, Z+7	; 0x07
 992:	2f 5f       	subi	r18, 0xFF	; 255
 994:	3f 4f       	sbci	r19, 0xFF	; 255
 996:	37 83       	std	Z+7, r19	; 0x07
 998:	26 83       	std	Z+6, r18	; 0x06
 99a:	10 c0       	rjmp	.+32     	; 0x9bc <fputc+0x66>
 99c:	eb 01       	movw	r28, r22
 99e:	09 2f       	mov	r16, r25
 9a0:	18 2f       	mov	r17, r24
 9a2:	00 84       	ldd	r0, Z+8	; 0x08
 9a4:	f1 85       	ldd	r31, Z+9	; 0x09
 9a6:	e0 2d       	mov	r30, r0
 9a8:	09 95       	icall
 9aa:	89 2b       	or	r24, r25
 9ac:	e1 f6       	brne	.-72     	; 0x966 <fputc+0x10>
 9ae:	8e 81       	ldd	r24, Y+6	; 0x06
 9b0:	9f 81       	ldd	r25, Y+7	; 0x07
 9b2:	01 96       	adiw	r24, 0x01	; 1
 9b4:	9f 83       	std	Y+7, r25	; 0x07
 9b6:	8e 83       	std	Y+6, r24	; 0x06
 9b8:	81 2f       	mov	r24, r17
 9ba:	90 2f       	mov	r25, r16
 9bc:	df 91       	pop	r29
 9be:	cf 91       	pop	r28
 9c0:	1f 91       	pop	r17
 9c2:	0f 91       	pop	r16
 9c4:	08 95       	ret

000009c6 <__ultoa_invert>:
 9c6:	fa 01       	movw	r30, r20
 9c8:	aa 27       	eor	r26, r26
 9ca:	28 30       	cpi	r18, 0x08	; 8
 9cc:	51 f1       	breq	.+84     	; 0xa22 <__ultoa_invert+0x5c>
 9ce:	20 31       	cpi	r18, 0x10	; 16
 9d0:	81 f1       	breq	.+96     	; 0xa32 <__ultoa_invert+0x6c>
 9d2:	e8 94       	clt
 9d4:	6f 93       	push	r22
 9d6:	6e 7f       	andi	r22, 0xFE	; 254
 9d8:	6e 5f       	subi	r22, 0xFE	; 254
 9da:	7f 4f       	sbci	r23, 0xFF	; 255
 9dc:	8f 4f       	sbci	r24, 0xFF	; 255
 9de:	9f 4f       	sbci	r25, 0xFF	; 255
 9e0:	af 4f       	sbci	r26, 0xFF	; 255
 9e2:	b1 e0       	ldi	r27, 0x01	; 1
 9e4:	3e d0       	rcall	.+124    	; 0xa62 <__ultoa_invert+0x9c>
 9e6:	b4 e0       	ldi	r27, 0x04	; 4
 9e8:	3c d0       	rcall	.+120    	; 0xa62 <__ultoa_invert+0x9c>
 9ea:	67 0f       	add	r22, r23
 9ec:	78 1f       	adc	r23, r24
 9ee:	89 1f       	adc	r24, r25
 9f0:	9a 1f       	adc	r25, r26
 9f2:	a1 1d       	adc	r26, r1
 9f4:	68 0f       	add	r22, r24
 9f6:	79 1f       	adc	r23, r25
 9f8:	8a 1f       	adc	r24, r26
 9fa:	91 1d       	adc	r25, r1
 9fc:	a1 1d       	adc	r26, r1
 9fe:	6a 0f       	add	r22, r26
 a00:	71 1d       	adc	r23, r1
 a02:	81 1d       	adc	r24, r1
 a04:	91 1d       	adc	r25, r1
 a06:	a1 1d       	adc	r26, r1
 a08:	20 d0       	rcall	.+64     	; 0xa4a <__ultoa_invert+0x84>
 a0a:	09 f4       	brne	.+2      	; 0xa0e <__ultoa_invert+0x48>
 a0c:	68 94       	set
 a0e:	3f 91       	pop	r19
 a10:	2a e0       	ldi	r18, 0x0A	; 10
 a12:	26 9f       	mul	r18, r22
 a14:	11 24       	eor	r1, r1
 a16:	30 19       	sub	r19, r0
 a18:	30 5d       	subi	r19, 0xD0	; 208
 a1a:	31 93       	st	Z+, r19
 a1c:	de f6       	brtc	.-74     	; 0x9d4 <__ultoa_invert+0xe>
 a1e:	cf 01       	movw	r24, r30
 a20:	08 95       	ret
 a22:	46 2f       	mov	r20, r22
 a24:	47 70       	andi	r20, 0x07	; 7
 a26:	40 5d       	subi	r20, 0xD0	; 208
 a28:	41 93       	st	Z+, r20
 a2a:	b3 e0       	ldi	r27, 0x03	; 3
 a2c:	0f d0       	rcall	.+30     	; 0xa4c <__ultoa_invert+0x86>
 a2e:	c9 f7       	brne	.-14     	; 0xa22 <__ultoa_invert+0x5c>
 a30:	f6 cf       	rjmp	.-20     	; 0xa1e <__ultoa_invert+0x58>
 a32:	46 2f       	mov	r20, r22
 a34:	4f 70       	andi	r20, 0x0F	; 15
 a36:	40 5d       	subi	r20, 0xD0	; 208
 a38:	4a 33       	cpi	r20, 0x3A	; 58
 a3a:	18 f0       	brcs	.+6      	; 0xa42 <__ultoa_invert+0x7c>
 a3c:	49 5d       	subi	r20, 0xD9	; 217
 a3e:	31 fd       	sbrc	r19, 1
 a40:	40 52       	subi	r20, 0x20	; 32
 a42:	41 93       	st	Z+, r20
 a44:	02 d0       	rcall	.+4      	; 0xa4a <__ultoa_invert+0x84>
 a46:	a9 f7       	brne	.-22     	; 0xa32 <__ultoa_invert+0x6c>
 a48:	ea cf       	rjmp	.-44     	; 0xa1e <__ultoa_invert+0x58>
 a4a:	b4 e0       	ldi	r27, 0x04	; 4
 a4c:	a6 95       	lsr	r26
 a4e:	97 95       	ror	r25
 a50:	87 95       	ror	r24
 a52:	77 95       	ror	r23
 a54:	67 95       	ror	r22
 a56:	ba 95       	dec	r27
 a58:	c9 f7       	brne	.-14     	; 0xa4c <__ultoa_invert+0x86>
 a5a:	00 97       	sbiw	r24, 0x00	; 0
 a5c:	61 05       	cpc	r22, r1
 a5e:	71 05       	cpc	r23, r1
 a60:	08 95       	ret
 a62:	9b 01       	movw	r18, r22
 a64:	ac 01       	movw	r20, r24
 a66:	0a 2e       	mov	r0, r26
 a68:	06 94       	lsr	r0
 a6a:	57 95       	ror	r21
 a6c:	47 95       	ror	r20
 a6e:	37 95       	ror	r19
 a70:	27 95       	ror	r18
 a72:	ba 95       	dec	r27
 a74:	c9 f7       	brne	.-14     	; 0xa68 <__ultoa_invert+0xa2>
 a76:	62 0f       	add	r22, r18
 a78:	73 1f       	adc	r23, r19
 a7a:	84 1f       	adc	r24, r20
 a7c:	95 1f       	adc	r25, r21
 a7e:	a0 1d       	adc	r26, r0
 a80:	08 95       	ret

00000a82 <__prologue_saves__>:
 a82:	2f 92       	push	r2
 a84:	3f 92       	push	r3
 a86:	4f 92       	push	r4
 a88:	5f 92       	push	r5
 a8a:	6f 92       	push	r6
 a8c:	7f 92       	push	r7
 a8e:	8f 92       	push	r8
 a90:	9f 92       	push	r9
 a92:	af 92       	push	r10
 a94:	bf 92       	push	r11
 a96:	cf 92       	push	r12
 a98:	df 92       	push	r13
 a9a:	ef 92       	push	r14
 a9c:	ff 92       	push	r15
 a9e:	0f 93       	push	r16
 aa0:	1f 93       	push	r17
 aa2:	cf 93       	push	r28
 aa4:	df 93       	push	r29
 aa6:	cd b7       	in	r28, 0x3d	; 61
 aa8:	de b7       	in	r29, 0x3e	; 62
 aaa:	ca 1b       	sub	r28, r26
 aac:	db 0b       	sbc	r29, r27
 aae:	0f b6       	in	r0, 0x3f	; 63
 ab0:	f8 94       	cli
 ab2:	de bf       	out	0x3e, r29	; 62
 ab4:	0f be       	out	0x3f, r0	; 63
 ab6:	cd bf       	out	0x3d, r28	; 61
 ab8:	09 94       	ijmp

00000aba <__epilogue_restores__>:
 aba:	2a 88       	ldd	r2, Y+18	; 0x12
 abc:	39 88       	ldd	r3, Y+17	; 0x11
 abe:	48 88       	ldd	r4, Y+16	; 0x10
 ac0:	5f 84       	ldd	r5, Y+15	; 0x0f
 ac2:	6e 84       	ldd	r6, Y+14	; 0x0e
 ac4:	7d 84       	ldd	r7, Y+13	; 0x0d
 ac6:	8c 84       	ldd	r8, Y+12	; 0x0c
 ac8:	9b 84       	ldd	r9, Y+11	; 0x0b
 aca:	aa 84       	ldd	r10, Y+10	; 0x0a
 acc:	b9 84       	ldd	r11, Y+9	; 0x09
 ace:	c8 84       	ldd	r12, Y+8	; 0x08
 ad0:	df 80       	ldd	r13, Y+7	; 0x07
 ad2:	ee 80       	ldd	r14, Y+6	; 0x06
 ad4:	fd 80       	ldd	r15, Y+5	; 0x05
 ad6:	0c 81       	ldd	r16, Y+4	; 0x04
 ad8:	1b 81       	ldd	r17, Y+3	; 0x03
 ada:	aa 81       	ldd	r26, Y+2	; 0x02
 adc:	b9 81       	ldd	r27, Y+1	; 0x01
 ade:	ce 0f       	add	r28, r30
 ae0:	d1 1d       	adc	r29, r1
 ae2:	0f b6       	in	r0, 0x3f	; 63
 ae4:	f8 94       	cli
 ae6:	de bf       	out	0x3e, r29	; 62
 ae8:	0f be       	out	0x3f, r0	; 63
 aea:	cd bf       	out	0x3d, r28	; 61
 aec:	ed 01       	movw	r28, r26
 aee:	08 95       	ret

00000af0 <_exit>:
 af0:	f8 94       	cli

00000af2 <__stop_program>:
 af2:	ff cf       	rjmp	.-2      	; 0xaf2 <__stop_program>
